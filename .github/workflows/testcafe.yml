name: testcafe
on: [pull_request]
env:
  BROWSERSTACK_ACCESS_KEY: "${{ secrets.BROWSERSTACK_ACCESS_KEY }}"
  BROWSERSTACK_USERNAME: "${{ secrets.BROWSERSTACK_USERNAME }}"
  SECRET_KEY: 'abcdef' # unsafe - for testing only
  DATABASE_URL: 'postgres://postgres:postgres@localhost:5432/test_posthog'
  REDIS_URL: 'redis://localhost'
  TEST: 'true'

jobs:
  testcafe:
    runs-on: ubuntu-latest
    services:
        postgres:
            image: postgres:12
            env:
                POSTGRES_USER: postgres
                POSTGRES_PASSWORD: postgres
                POSTGRES_DB: test_posthog
            ports: ['5432:5432']
            options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        redis:
            image: redis
            ports:
                - '6379:6379'
            options: >-
                --health-cmd "redis-cli ping"
                --health-interval 10s
                --health-timeout 5s
                --health-retries 5

    steps:
      - name: Check out posthog-js server
        uses: actions/checkout@v2

      - name: Check out Django server for database setup
        uses: actions/checkout@v2
        with:
            repository: 'PostHog/posthog'
            path: 'posthog/'
            ref: testcafe-setup

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
            python-version: 3.9.0

      - name: Set up Node 14
        uses: actions/setup-node@v2
        with:
            node-version: 14

      - name: Install requirements.txt dependencies with pip
        run: python -m pip install --upgrade pip && python -m pip install -r posthog/requirements.txt

      - name: Set up databases
        env:
            DATABASE_URL: 'postgres://postgres:postgres@localhost:5432/posthog' # override for setup_test_environment command
        run: cd posthog && python manage.py setup_test_environment

      - name: Start server
        run: cd posthog; python manage.py setup_dev --no-data; ./bin/start-backend &

      - name: Run curl
        run: "curl --header 'Authorization: Bearer e2e_demo_api_key' localhost:8000/api/event"

      - name: Serve static files
        run: python -m http.server 8080 &

      - name: Set up posthog-js
        run: yarn; yarn build-array; cd posthog; yarn add posthog-js@"link:.."; mkdir -p frontend/dist; yarn copy-scripts
      - name: Run curl2
        run: "curl localhost:8000/static/array.js"

      - name: Run chrome test
        run: npx testcafe "browserstack:chrome" testcafe/e2e.ts --assertion-timeout 10000

      - name: Run ie test
        run: npx testcafe "browserstack:ie" testcafe/e2e.ts --assertion-timeout 10000

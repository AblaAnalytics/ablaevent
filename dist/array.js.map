{"version":3,"sources":["config.js","utils.js","autocapture-utils.js","autocapture.js","dom-capture.js","gdpr-utils.js","api-actions.js","posthog-group.js","posthog-people.js","posthog-persistence.js","posthog-core.js","loader-globals.js"],"names":["Config","DEBUG","LIB_VERSION","win","window","loc","hostname","navigator","userAgent","document","location","referrer","screen","width","height","ArrayProto","Array","prototype","FuncProto","Function","ObjProto","Object","slice","toString","hasOwnProperty","windowConsole","console","windowOpera","opera","nativeBind","bind","nativeForEach","forEach","nativeIndexOf","indexOf","nativeIsArray","isArray","breaker","DOMAIN_MATCH_REGEX","_","trim","str","replace","log","isUndefined","apply","arguments","err","each","arg","error","args","concat","toArray","critical","func","context","bound","call","isFunction","TypeError","ctor","self","result","bind_instance_methods","obj","iterator","length","i","l","key","escapeHTML","s","escaped","isString","extend","source","prop","f","test","x","isArguments","iterable","values","keys","results","value","identity","include","target","found","includes","needle","inherit","subclass","superclass","constructor","isObject","isEmptyObject","isDate","isNumber","isElement","nodeType","encodeDates","v","k","formatDate","timestamp","Date","now","d","pad","n","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","safewrap","e","safewrap_class","klass","functions","safewrap_instance_methods","strip_empty_properties","p","ret","truncate","val","push","JSONEncode","mixed_val","quote","string","escapable","meta","lastIndex","a","c","charCodeAt","holder","gap","mind","partial","toJSON","isFinite","String","join","JSONDecode","at","ch","text","escapee","m","SyntaxError","next","charAt","number","hex","uffff","parseInt","fromCharCode","white","array","object","word","base64Encode","data","b64","h1","h2","h3","h4","bits","ac","enc","tmp_arr","utf8Encode","utftext","start","end","stringl","c1","substring","UUID","T","se","Math","random","ua","buffer","xor","byte_array","j","tmp","unshift","UA","isBlockedUA","HTTPBuildQuery","formdata","arg_separator","use_val","use_key","tph_arr","encodeURIComponent","getQueryParam","url","param","regexS","RegExp","exec","decodeURIComponent","getHashParam","hash","matches","match","cookie","get","name","nameEQ","ca","split","parse","set_seconds","seconds","cross_subdomain","is_secure","cdomain","expires","secure","domain","date","setTime","getTime","toGMTString","set","days","new_cookie_val","remove","_localStorage_supported","localStorage","is_supported","supported","msg","getItem","setItem","removeItem","register_event","fixEvent","event","preventDefault","stopPropagation","returnValue","cancelBubble","element","type","handler","oldSchool","useCapture","addEventListener","ontype","old_handler","makeHandler","new_handler","old_handlers","old_result","new_result","TOKEN_MATCH_REGEX","dom_query","getAllChildren","all","getElementsByTagName","bad_whitespace","hasClass","elem","selector","className","query","getElementsBySelector","tokens","token","tagName","foundCount","elements","currentContextIndex","currentContext","id","getElementById","nodeName","toLowerCase","token_match","attrName","checkFunction","attrOperator","attrValue","getAttribute","lastIndexOf","info","campaignParams","campaign_keywords","kw","params","kwkey","URL","searchEngine","search","searchInfo","keyword","browser","user_agent","vendor","browserVersion","regex","undefined","parseFloat","os","device","referringDomain","properties","href","people_properties","getClassName","el","baseVal","getSafeText","elText","shouldCaptureElement","childNodes","child","isTextNode","textContent","filter","shouldCaptureValue","isElementNode","isTag","tag","usefulElements","shouldCaptureDomEvent","curEl","parentIsUsefulElement","targetElementList","parentNode","classes","sensitiveNameRegex","ccRegex","ssnRegex","autocapture","_initializedTokens","_previousElementSibling","previousElementSibling","previousSibling","_loadScript","scriptUrlToLoad","callback","scriptTag","createElement","src","onload","scripts","insertBefore","body","appendChild","_getPropertiesFromElement","tag_name","props","attributes","attr","currentElem","nthChild","nthOfType","_getDefaultProperties","eventType","host","pathname","_extractCustomPropertyValue","customProperty","propValues","querySelectorAll","matchedElem","_getCustomProperties","_customProperties","eventSelector","eventElements","eventElement","_getEventTarget","srcElement","_captureEvent","instance","elementsJson","explicitNoCapture","shouldCaptureEl","safeElementText","capture","_navigate","_addDomEventHandlers","init","get_config","_maybeLoadEditor","parseDecideResponse","response","_send_request","method","_prepare_callback","that","setTimeout","_editorParamsFromHash","editorParams","state","JSON","expiresInSeconds","Number","sessionStorage","stringify","history","replaceState","title","parseFromUrl","parseFromStorage","_loadEditor","editorUrl","enabledForProject","numBuckets","numEnabledBuckets","charCodeSum","isBrowserSupported","DomCapture","create_properties","event_handler","after_capture_handler","posthog_instance","mp","event_name","user_callback","override_event","options","timeout","capture_callback","timeout_occured","callback_fired","LinkCapture","evt","new_tab","which","metaKey","ctrlKey","FormCapture","submit","GDPR_DEFAULT_PERSISTENCE_PREFIX","optIn","_optInOut","optOut","hasOptedIn","_getStorageValue","hasOptedOut","_hasDoNotCaptureFlagOn","addOptOutCheckPostHogLib","_addOptOutCheck","addOptOutCheckPostHogPeople","_get_config","addOptOutCheckPostHogGroup","clearOptInOut","_getStorage","_getStorageKey","crossSubdomainCookie","persistenceType","persistencePrefix","nav","hasDntOn","dntValue","optValue","cookieExpiration","secureCookie","captureEventName","captureProperties","getConfigValue","optedOut","SET_ACTION","SET_ONCE_ACTION","UNSET_ACTION","ADD_ACTION","APPEND_ACTION","UNION_ACTION","REMOVE_ACTION","DELETE_ACTION","apiActions","set_action","to","$set","_is_reserved_property","unset_action","$unset","set_once_action","$set_once","union_action","list_name","$union","append_action","$append","remove_action","$remove","delete_action","PostHogGroup","_init","group_key","group_id","_posthog","_group_key","_group_id","set_once","unset","union","date_encoded_data","truncated_data","json_data","encoded_data","conf","PostHogPeople","update_referrer_info","get_referrer_info","increment","by","$add","isNaN","append","capture_charge","amount","clear_charges","delete_user","_identify_called","get_distinct_id","device_id","get_property","user_id","had_persisted_distinct_id","_enqueue","status","conf_var","_flags","identify_called","_add_to_people_queue","_flush_one_queue","action","action_method","queue_to_params_fn","_this","queued_data","_get_queue","action_params","_pop_from_people_queue","_flush","_set_callback","_add_callback","_append_callback","_set_once_callback","_union_callback","_unset_callback","_remove_callback","$append_queue","$remove_queue","queue","$append_item","append_callback","pop","save","$remove_item","remove_callback","SET_QUEUE_KEY","SET_ONCE_QUEUE_KEY","UNSET_QUEUE_KEY","ADD_QUEUE_KEY","APPEND_QUEUE_KEY","REMOVE_QUEUE_KEY","UNION_QUEUE_KEY","PEOPLE_DISTINCT_ID_KEY","ALIAS_ID_KEY","CAMPAIGN_IDS_KEY","EVENT_TIMERS_KEY","RESERVED_PROPERTIES","PostHogPersistence","config","campaign_params_saved","storage_type","storage","load","update_config","upgrade","disabled","entry","upgrade_from_old_lib","old_cookie_name","old_cookie","register_once","_expire_notification_campaigns","expire_days","clear","default_value","default_expiry","register","unregister","campaigns_shown","EXPIRY_TIME","campaign_id","update_campaign_params","update_search_keyword","safe_merge","set_disabled","set_cross_subdomain","set_secure","get_cross_subdomain","q_key","_get_queue_key","q_data","set_q","_get_or_create_queue","set_once_q","unset_q","add_q","union_q","remove_q","append_q","enqueued_obj","append_obj","q","queued_action","default_val","set_event_timer","timers","remove_event_timer","init_type","posthog_master","INIT_MODULE","INIT_SNIPPET","PRIMARY_INSTANCE_NAME","USE_XHR","XMLHttpRequest","ENQUEUE_REQUESTS","sendBeacon","DEFAULT_CONFIG","DOM_LOADED","PostHogLib","create_mplib","_cached_groups","_user_decide_check_complete","_events_captureed_before_user_decide_check_complete","_execute_array","_loaded","set_config","__dom_loaded_queue","__request_queue","__disabled_events","_gdpr_init","uuid","capture_pageview","_dom_loaded","item","_capture_dom","has_opted_out_captureing","DomClass","dt","callback_function","jsc","randomized_cb","floor","callback_string","DEFAULT_OPTIONS","transport","body_data","use_sendBeacon","use_post","verbose_mode","img","req","open","headers","headerValue","headerName","setRequestHeader","withCredentials","onreadystatechange","readyState","responseText","statusText","send","script","async","defer","fn_name","alias_calls","other_calls","captureing_calls","execute","calls","caller","disable","events","disable_all_events","_event_is_disabled","start_timestamp","duration_in_ms","toFixed","property_blacklist","blacklisted_prop","set_group","group_ids","add_group","old_values","remove_group","old_value","idx","splice","capture_with_groups","groups","captureing_props","_create_map_key","_remove_group_from_cache","get_group","map_key","group","page","capture_links","capture_forms","FormCaptureer","time_event","property","_register_single","identify","new_distinct_id","previous_distinct_id","reset","alias","original","name_tag","prop_name","property_name","_handle_user_decide_check_complete","has_opted_in_captureing","opt_in_captureing","opt_out_captureing","clear_opt_in_out_captureing","_gdpr_update_persistence","_gdpr_call_func","_check_and_handle_notifications","instances","extend_mp","override_ph_init_func","add_dom_loaded_handler","dom_loaded_handler","done","inst","attachEvent","toplevel","frameElement","documentElement","doScroll","do_scroll_check","init_from_snippet","posthog","init_as_module"],"mappings":"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","file":"array.js","sourceRoot":"../src","sourcesContent":["var Config = {\n    DEBUG: false,\n    LIB_VERSION: '1.0.0'\n};\n\nexport default Config;\n","/* eslint camelcase: \"off\", eqeqeq: \"off\" */\nimport Config from './config';\n\n// since es6 imports are static and we run unit tests from the console, window won't be defined when importing this file\nvar win;\nif (typeof(window) === 'undefined') {\n    var loc = {\n        hostname: ''\n    };\n    win = {\n        navigator: { userAgent: '' },\n        document: {\n            location: loc,\n            referrer: ''\n        },\n        screen: { width: 0, height: 0 },\n        location: loc\n    };\n} else {\n    win = window;\n}\n\n/*\n * Saved references to long variable names, so that closure compiler can\n * minimize file size.\n */\n\nvar ArrayProto = Array.prototype,\n    FuncProto = Function.prototype,\n    ObjProto = Object.prototype,\n    slice = ArrayProto.slice,\n    toString = ObjProto.toString,\n    hasOwnProperty = ObjProto.hasOwnProperty,\n    windowConsole = win.console,\n    navigator = win.navigator,\n    document = win.document,\n    windowOpera = win.opera,\n    screen = win.screen,\n    userAgent = navigator.userAgent;\n\nvar nativeBind = FuncProto.bind,\n    nativeForEach = ArrayProto.forEach,\n    nativeIndexOf = ArrayProto.indexOf,\n    nativeIsArray = Array.isArray,\n    breaker = {};\n\nvar DOMAIN_MATCH_REGEX = /[a-z0-9][a-z0-9-]+\\.[a-z.]{2,6}$/i;\n\nvar _ = {\n    trim: function(str) {\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\n        return str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n    }\n};\n\n// Console override\nvar console = {\n    /** @type {function(...*)} */\n    log: function() {\n        if (Config.DEBUG && !_.isUndefined(windowConsole) && windowConsole) {\n            try {\n                windowConsole.log.apply(windowConsole, arguments);\n            } catch (err) {\n                _.each(arguments, function(arg) {\n                    windowConsole.log(arg);\n                });\n            }\n        }\n    },\n    /** @type {function(...*)} */\n    error: function() {\n        if (Config.DEBUG && !_.isUndefined(windowConsole) && windowConsole) {\n            var args = ['PostHog error:'].concat(_.toArray(arguments));\n            try {\n                windowConsole.error.apply(windowConsole, args);\n            } catch (err) {\n                _.each(args, function(arg) {\n                    windowConsole.error(arg);\n                });\n            }\n        }\n    },\n    /** @type {function(...*)} */\n    critical: function() {\n        if (!_.isUndefined(windowConsole) && windowConsole) {\n            var args = ['PostHog error:'].concat(_.toArray(arguments));\n            try {\n                windowConsole.error.apply(windowConsole, args);\n            } catch (err) {\n                _.each(args, function(arg) {\n                    windowConsole.error(arg);\n                });\n            }\n        }\n    }\n};\n\n\n// UNDERSCORE\n// Embed part of the Underscore Library\n_.bind = function(func, context) {\n    var args, bound;\n    if (nativeBind && func.bind === nativeBind) {\n        return nativeBind.apply(func, slice.call(arguments, 1));\n    }\n    if (!_.isFunction(func)) {\n        throw new TypeError();\n    }\n    args = slice.call(arguments, 2);\n    bound = function() {\n        if (!(this instanceof bound)) {\n            return func.apply(context, args.concat(slice.call(arguments)));\n        }\n        var ctor = {};\n        ctor.prototype = func.prototype;\n        var self = new ctor();\n        ctor.prototype = null;\n        var result = func.apply(self, args.concat(slice.call(arguments)));\n        if (Object(result) === result) {\n            return result;\n        }\n        return self;\n    };\n    return bound;\n};\n\n_.bind_instance_methods = function(obj) {\n    for (var func in obj) {\n        if (typeof(obj[func]) === 'function') {\n            obj[func] = _.bind(obj[func], obj);\n        }\n    }\n};\n\n/**\n * @param {*=} obj\n * @param {function(...*)=} iterator\n * @param {Object=} context\n */\n_.each = function(obj, iterator, context) {\n    if (obj === null || obj === undefined) {\n        return;\n    }\n    if (nativeForEach && obj.forEach === nativeForEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length === +obj.length) {\n        for (var i = 0, l = obj.length; i < l; i++) {\n            if (i in obj && iterator.call(context, obj[i], i, obj) === breaker) {\n                return;\n            }\n        }\n    } else {\n        for (var key in obj) {\n            if (hasOwnProperty.call(obj, key)) {\n                if (iterator.call(context, obj[key], key, obj) === breaker) {\n                    return;\n                }\n            }\n        }\n    }\n};\n\n_.escapeHTML = function(s) {\n    var escaped = s;\n    if (escaped && _.isString(escaped)) {\n        escaped = escaped\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#039;');\n    }\n    return escaped;\n};\n\n_.extend = function(obj) {\n    _.each(slice.call(arguments, 1), function(source) {\n        for (var prop in source) {\n            if (source[prop] !== void 0) {\n                obj[prop] = source[prop];\n            }\n        }\n    });\n    return obj;\n};\n\n_.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n};\n\n// from a comment on http://dbj.org/dbj/?p=286\n// fails on only one very rare and deliberate custom object:\n// var bomb = { toString : undefined, valueOf: function(o) { return \"function BOMBA!\"; }};\n_.isFunction = function(f) {\n    try {\n        return /^\\s*\\bfunction\\b/.test(f);\n    } catch (x) {\n        return false;\n    }\n};\n\n_.isArguments = function(obj) {\n    return !!(obj && hasOwnProperty.call(obj, 'callee'));\n};\n\n_.toArray = function(iterable) {\n    if (!iterable) {\n        return [];\n    }\n    if (iterable.toArray) {\n        return iterable.toArray();\n    }\n    if (_.isArray(iterable)) {\n        return slice.call(iterable);\n    }\n    if (_.isArguments(iterable)) {\n        return slice.call(iterable);\n    }\n    return _.values(iterable);\n};\n\n_.keys = function(obj) {\n    var results = [];\n    if (obj === null) {\n        return results;\n    }\n    _.each(obj, function(value, key) {\n        results[results.length] = key;\n    });\n    return results;\n};\n\n_.values = function(obj) {\n    var results = [];\n    if (obj === null) {\n        return results;\n    }\n    _.each(obj, function(value) {\n        results[results.length] = value;\n    });\n    return results;\n};\n\n_.identity = function(value) {\n    return value;\n};\n\n_.include = function(obj, target) {\n    var found = false;\n    if (obj === null) {\n        return found;\n    }\n    if (nativeIndexOf && obj.indexOf === nativeIndexOf) {\n        return obj.indexOf(target) != -1;\n    }\n    _.each(obj, function(value) {\n        if (found || (found = (value === target))) {\n            return breaker;\n        }\n    });\n    return found;\n};\n\n_.includes = function(str, needle) {\n    return str.indexOf(needle) !== -1;\n};\n\n// Underscore Addons\n_.inherit = function(subclass, superclass) {\n    subclass.prototype = new superclass();\n    subclass.prototype.constructor = subclass;\n    subclass.superclass = superclass.prototype;\n    return subclass;\n};\n\n_.isObject = function(obj) {\n    return (obj === Object(obj) && !_.isArray(obj));\n};\n\n_.isEmptyObject = function(obj) {\n    if (_.isObject(obj)) {\n        for (var key in obj) {\n            if (hasOwnProperty.call(obj, key)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return false;\n};\n\n_.isUndefined = function(obj) {\n    return obj === void 0;\n};\n\n_.isString = function(obj) {\n    return toString.call(obj) == '[object String]';\n};\n\n_.isDate = function(obj) {\n    return toString.call(obj) == '[object Date]';\n};\n\n_.isNumber = function(obj) {\n    return toString.call(obj) == '[object Number]';\n};\n\n_.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n};\n\n_.encodeDates = function(obj) {\n    _.each(obj, function(v, k) {\n        if (_.isDate(v)) {\n            obj[k] = _.formatDate(v);\n        } else if (_.isObject(v)) {\n            obj[k] = _.encodeDates(v); // recurse\n        }\n    });\n    return obj;\n};\n\n_.timestamp = function() {\n    Date.now = Date.now || function() {\n        return +new Date;\n    };\n    return Date.now();\n};\n\n_.formatDate = function(d) {\n    // YYYY-MM-DDTHH:MM:SS in UTC\n    function pad(n) {\n        return n < 10 ? '0' + n : n;\n    }\n    return d.getUTCFullYear() + '-' +\n        pad(d.getUTCMonth() + 1) + '-' +\n        pad(d.getUTCDate()) + 'T' +\n        pad(d.getUTCHours()) + ':' +\n        pad(d.getUTCMinutes()) + ':' +\n        pad(d.getUTCSeconds());\n};\n\n_.safewrap = function(f) {\n    return function() {\n        try {\n            return f.apply(this, arguments);\n        } catch (e) {\n            console.critical('Implementation error. Please turn on debug and contact support@posthog.com.');\n            if (Config.DEBUG){\n                console.critical(e);\n            }\n        }\n    };\n};\n\n_.safewrap_class = function(klass, functions) {\n    for (var i = 0; i < functions.length; i++) {\n        klass.prototype[functions[i]] = _.safewrap(klass.prototype[functions[i]]);\n    }\n};\n\n_.safewrap_instance_methods = function(obj) {\n    for (var func in obj) {\n        if (typeof(obj[func]) === 'function') {\n            obj[func] = _.safewrap(obj[func]);\n        }\n    }\n};\n\n_.strip_empty_properties = function(p) {\n    var ret = {};\n    _.each(p, function(v, k) {\n        if (_.isString(v) && v.length > 0) {\n            ret[k] = v;\n        }\n    });\n    return ret;\n};\n\n/*\n * this function returns a copy of object after truncating it.  If\n * passed an Array or Object it will iterate through obj and\n * truncate all the values recursively.\n */\n_.truncate = function(obj, length) {\n    var ret;\n\n    if (typeof(obj) === 'string') {\n        ret = obj.slice(0, length);\n    } else if (_.isArray(obj)) {\n        ret = [];\n        _.each(obj, function(val) {\n            ret.push(_.truncate(val, length));\n        });\n    } else if (_.isObject(obj)) {\n        ret = {};\n        _.each(obj, function(val, key) {\n            ret[key] = _.truncate(val, length);\n        });\n    } else {\n        ret = obj;\n    }\n\n    return ret;\n};\n\n_.JSONEncode = (function() {\n    return function(mixed_val) {\n        var value = mixed_val;\n        var quote = function(string) {\n            var escapable = /[\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g; // eslint-disable-line no-control-regex\n            var meta = { // table of character substitutions\n                '\\b': '\\\\b',\n                '\\t': '\\\\t',\n                '\\n': '\\\\n',\n                '\\f': '\\\\f',\n                '\\r': '\\\\r',\n                '\"': '\\\\\"',\n                '\\\\': '\\\\\\\\'\n            };\n\n            escapable.lastIndex = 0;\n            return escapable.test(string) ?\n                '\"' + string.replace(escapable, function(a) {\n                    var c = meta[a];\n                    return typeof c === 'string' ? c :\n                        '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n                }) + '\"' :\n                '\"' + string + '\"';\n        };\n\n        var str = function(key, holder) {\n            var gap = '';\n            var indent = '    ';\n            var i = 0; // The loop counter.\n            var k = ''; // The member key.\n            var v = ''; // The member value.\n            var length = 0;\n            var mind = gap;\n            var partial = [];\n            var value = holder[key];\n\n            // If the value has a toJSON method, call it to obtain a replacement value.\n            if (value && typeof value === 'object' &&\n                typeof value.toJSON === 'function') {\n                value = value.toJSON(key);\n            }\n\n            // What happens next depends on the value's type.\n            switch (typeof value) {\n                case 'string':\n                    return quote(value);\n\n                case 'number':\n                    // JSON numbers must be finite. Encode non-finite numbers as null.\n                    return isFinite(value) ? String(value) : 'null';\n\n                case 'boolean':\n                case 'null':\n                    // If the value is a boolean or null, convert it to a string. Note:\n                    // typeof null does not produce 'null'. The case is included here in\n                    // the remote chance that this gets fixed someday.\n\n                    return String(value);\n\n                case 'object':\n                    // If the type is 'object', we might be dealing with an object or an array or\n                    // null.\n                    // Due to a specification blunder in ECMAScript, typeof null is 'object',\n                    // so watch out for that case.\n                    if (!value) {\n                        return 'null';\n                    }\n\n                    // Make an array to hold the partial results of stringifying this object value.\n                    gap += indent;\n                    partial = [];\n\n                    // Is the value an array?\n                    if (toString.apply(value) === '[object Array]') {\n                        // The value is an array. Stringify every element. Use null as a placeholder\n                        // for non-JSON values.\n\n                        length = value.length;\n                        for (i = 0; i < length; i += 1) {\n                            partial[i] = str(i, value) || 'null';\n                        }\n\n                        // Join all of the elements together, separated with commas, and wrap them in\n                        // brackets.\n                        v = partial.length === 0 ? '[]' :\n                            gap ? '[\\n' + gap +\n                            partial.join(',\\n' + gap) + '\\n' +\n                            mind + ']' :\n                                '[' + partial.join(',') + ']';\n                        gap = mind;\n                        return v;\n                    }\n\n                    // Iterate through all of the keys in the object.\n                    for (k in value) {\n                        if (hasOwnProperty.call(value, k)) {\n                            v = str(k, value);\n                            if (v) {\n                                partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                            }\n                        }\n                    }\n\n                    // Join all of the member texts together, separated with commas,\n                    // and wrap them in braces.\n                    v = partial.length === 0 ? '{}' :\n                        gap ? '{' + partial.join(',') + '' +\n                        mind + '}' : '{' + partial.join(',') + '}';\n                    gap = mind;\n                    return v;\n            }\n        };\n\n        // Make a fake root object containing our value under the key of ''.\n        // Return the result of stringifying the value.\n        return str('', {\n            '': value\n        });\n    };\n})();\n\n/**\n * From https://github.com/douglascrockford/JSON-js/blob/master/json_parse.js\n * Slightly modified to throw a real Error rather than a POJO\n */\n_.JSONDecode = (function() {\n    var at, // The index of the current character\n        ch, // The current character\n        escapee = {\n            '\"': '\"',\n            '\\\\': '\\\\',\n            '/': '/',\n            'b': '\\b',\n            'f': '\\f',\n            'n': '\\n',\n            'r': '\\r',\n            't': '\\t'\n        },\n        text,\n        error = function(m) {\n            var e = new SyntaxError(m);\n            e.at = at;\n            e.text = text;\n            throw e;\n        },\n        next = function(c) {\n            // If a c parameter is provided, verify that it matches the current character.\n            if (c && c !== ch) {\n                error('Expected \\'' + c + '\\' instead of \\'' + ch + '\\'');\n            }\n            // Get the next character. When there are no more characters,\n            // return the empty string.\n            ch = text.charAt(at);\n            at += 1;\n            return ch;\n        },\n        number = function() {\n            // Parse a number value.\n            var number,\n                string = '';\n\n            if (ch === '-') {\n                string = '-';\n                next('-');\n            }\n            while (ch >= '0' && ch <= '9') {\n                string += ch;\n                next();\n            }\n            if (ch === '.') {\n                string += '.';\n                while (next() && ch >= '0' && ch <= '9') {\n                    string += ch;\n                }\n            }\n            if (ch === 'e' || ch === 'E') {\n                string += ch;\n                next();\n                if (ch === '-' || ch === '+') {\n                    string += ch;\n                    next();\n                }\n                while (ch >= '0' && ch <= '9') {\n                    string += ch;\n                    next();\n                }\n            }\n            number = +string;\n            if (!isFinite(number)) {\n                error('Bad number');\n            } else {\n                return number;\n            }\n        },\n\n        string = function() {\n            // Parse a string value.\n            var hex,\n                i,\n                string = '',\n                uffff;\n            // When parsing for string values, we must look for \" and \\ characters.\n            if (ch === '\"') {\n                while (next()) {\n                    if (ch === '\"') {\n                        next();\n                        return string;\n                    }\n                    if (ch === '\\\\') {\n                        next();\n                        if (ch === 'u') {\n                            uffff = 0;\n                            for (i = 0; i < 4; i += 1) {\n                                hex = parseInt(next(), 16);\n                                if (!isFinite(hex)) {\n                                    break;\n                                }\n                                uffff = uffff * 16 + hex;\n                            }\n                            string += String.fromCharCode(uffff);\n                        } else if (typeof escapee[ch] === 'string') {\n                            string += escapee[ch];\n                        } else {\n                            break;\n                        }\n                    } else {\n                        string += ch;\n                    }\n                }\n            }\n            error('Bad string');\n        },\n        white = function() {\n            // Skip whitespace.\n            while (ch && ch <= ' ') {\n                next();\n            }\n        },\n        word = function() {\n            // true, false, or null.\n            switch (ch) {\n                case 't':\n                    next('t');\n                    next('r');\n                    next('u');\n                    next('e');\n                    return true;\n                case 'f':\n                    next('f');\n                    next('a');\n                    next('l');\n                    next('s');\n                    next('e');\n                    return false;\n                case 'n':\n                    next('n');\n                    next('u');\n                    next('l');\n                    next('l');\n                    return null;\n            }\n            error('Unexpected \"' + ch + '\"');\n        },\n        value, // Placeholder for the value function.\n        array = function() {\n            // Parse an array value.\n            var array = [];\n\n            if (ch === '[') {\n                next('[');\n                white();\n                if (ch === ']') {\n                    next(']');\n                    return array; // empty array\n                }\n                while (ch) {\n                    array.push(value());\n                    white();\n                    if (ch === ']') {\n                        next(']');\n                        return array;\n                    }\n                    next(',');\n                    white();\n                }\n            }\n            error('Bad array');\n        },\n        object = function() {\n            // Parse an object value.\n            var key,\n                object = {};\n\n            if (ch === '{') {\n                next('{');\n                white();\n                if (ch === '}') {\n                    next('}');\n                    return object; // empty object\n                }\n                while (ch) {\n                    key = string();\n                    white();\n                    next(':');\n                    if (Object.hasOwnProperty.call(object, key)) {\n                        error('Duplicate key \"' + key + '\"');\n                    }\n                    object[key] = value();\n                    white();\n                    if (ch === '}') {\n                        next('}');\n                        return object;\n                    }\n                    next(',');\n                    white();\n                }\n            }\n            error('Bad object');\n        };\n\n    value = function() {\n        // Parse a JSON value. It could be an object, an array, a string,\n        // a number, or a word.\n        white();\n        switch (ch) {\n            case '{':\n                return object();\n            case '[':\n                return array();\n            case '\"':\n                return string();\n            case '-':\n                return number();\n            default:\n                return ch >= '0' && ch <= '9' ? number() : word();\n        }\n    };\n\n    // Return the json_parse function. It will have access to all of the\n    // above functions and variables.\n    return function(source) {\n        var result;\n\n        text = source;\n        at = 0;\n        ch = ' ';\n        result = value();\n        white();\n        if (ch) {\n            error('Syntax error');\n        }\n\n        return result;\n    };\n})();\n\n_.base64Encode = function(data) {\n    var b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    var o1, o2, o3, h1, h2, h3, h4, bits, i = 0,\n        ac = 0,\n        enc = '',\n        tmp_arr = [];\n\n    if (!data) {\n        return data;\n    }\n\n    data = _.utf8Encode(data);\n\n    do { // pack three octets into four hexets\n        o1 = data.charCodeAt(i++);\n        o2 = data.charCodeAt(i++);\n        o3 = data.charCodeAt(i++);\n\n        bits = o1 << 16 | o2 << 8 | o3;\n\n        h1 = bits >> 18 & 0x3f;\n        h2 = bits >> 12 & 0x3f;\n        h3 = bits >> 6 & 0x3f;\n        h4 = bits & 0x3f;\n\n        // use hexets to index into b64, and append result to encoded string\n        tmp_arr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);\n    } while (i < data.length);\n\n    enc = tmp_arr.join('');\n\n    switch (data.length % 3) {\n        case 1:\n            enc = enc.slice(0, -2) + '==';\n            break;\n        case 2:\n            enc = enc.slice(0, -1) + '=';\n            break;\n    }\n\n    return enc;\n};\n\n_.utf8Encode = function(string) {\n    string = (string + '').replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n');\n\n    var utftext = '',\n        start,\n        end;\n    var stringl = 0,\n        n;\n\n    start = end = 0;\n    stringl = string.length;\n\n    for (n = 0; n < stringl; n++) {\n        var c1 = string.charCodeAt(n);\n        var enc = null;\n\n        if (c1 < 128) {\n            end++;\n        } else if ((c1 > 127) && (c1 < 2048)) {\n            enc = String.fromCharCode((c1 >> 6) | 192, (c1 & 63) | 128);\n        } else {\n            enc = String.fromCharCode((c1 >> 12) | 224, ((c1 >> 6) & 63) | 128, (c1 & 63) | 128);\n        }\n        if (enc !== null) {\n            if (end > start) {\n                utftext += string.substring(start, end);\n            }\n            utftext += enc;\n            start = end = n + 1;\n        }\n    }\n\n    if (end > start) {\n        utftext += string.substring(start, string.length);\n    }\n\n    return utftext;\n};\n\n_.UUID = (function() {\n\n    // Time/ticks information\n    // 1*new Date() is a cross browser version of Date.now()\n    var T = function() {\n        var d = 1 * new Date(),\n            i = 0;\n\n        // this while loop figures how many browser ticks go by\n        // before 1*new Date() returns a new number, ie the amount\n        // of ticks that go by per millisecond\n        while (d == 1 * new Date()) {\n            i++;\n        }\n\n        return d.toString(16) + i.toString(16);\n    };\n\n    // Math.Random entropy\n    var R = function() {\n        return Math.random().toString(16).replace('.', '');\n    };\n\n    // User agent entropy\n    // This function takes the user agent string, and then xors\n    // together each sequence of 8 bytes.  This produces a final\n    // sequence of 8 bytes which it returns as hex.\n    var UA = function() {\n        var ua = userAgent,\n            i, ch, buffer = [],\n            ret = 0;\n\n        function xor(result, byte_array) {\n            var j, tmp = 0;\n            for (j = 0; j < byte_array.length; j++) {\n                tmp |= (buffer[j] << j * 8);\n            }\n            return result ^ tmp;\n        }\n\n        for (i = 0; i < ua.length; i++) {\n            ch = ua.charCodeAt(i);\n            buffer.unshift(ch & 0xFF);\n            if (buffer.length >= 4) {\n                ret = xor(ret, buffer);\n                buffer = [];\n            }\n        }\n\n        if (buffer.length > 0) {\n            ret = xor(ret, buffer);\n        }\n\n        return ret.toString(16);\n    };\n\n    return function() {\n        var se = (screen.height * screen.width).toString(16);\n        return (T() + '-' + R() + '-' + UA() + '-' + se + '-' + T());\n    };\n})();\n\n// _.isBlockedUA()\n// This is to block various web spiders from executing our JS and\n// sending false captureing data\n_.isBlockedUA = function(ua) {\n    if (/(google web preview|baiduspider|yandexbot|bingbot|googlebot|yahoo! slurp)/i.test(ua)) {\n        return true;\n    }\n    return false;\n};\n\n/**\n * @param {Object=} formdata\n * @param {string=} arg_separator\n */\n_.HTTPBuildQuery = function(formdata, arg_separator) {\n    var use_val, use_key, tph_arr = [];\n\n    if (_.isUndefined(arg_separator)) {\n        arg_separator = '&';\n    }\n\n    _.each(formdata, function(val, key) {\n        use_val = encodeURIComponent(val.toString());\n        use_key = encodeURIComponent(key);\n        tph_arr[tph_arr.length] = use_key + '=' + use_val;\n    });\n\n    return tph_arr.join(arg_separator);\n};\n\n_.getQueryParam = function(url, param) {\n    // Expects a raw URL\n\n    param = param.replace(/[[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\n    var regexS = '[\\\\?&]' + param + '=([^&#]*)',\n        regex = new RegExp(regexS),\n        results = regex.exec(url);\n    if (results === null || (results && typeof(results[1]) !== 'string' && results[1].length)) {\n        return '';\n    } else {\n        var result = results[1];\n        try {\n            result = decodeURIComponent(result);\n        } catch(err) {\n            console.error('Skipping decoding for malformed query param: ' + result);\n        }\n        return result.replace(/\\+/g, ' ');\n    }\n};\n\n_.getHashParam = function(hash, param) {\n    var matches = hash.match(new RegExp(param + '=([^&]*)'));\n    return matches ? matches[1] : null;\n};\n\n// _.cookie\n// Methods partially borrowed from quirksmode.org/js/cookies.html\n_.cookie = {\n    get: function(name) {\n        try {\n            var nameEQ = name + '=';\n            var ca = document.cookie.split(';');\n            for (var i = 0; i < ca.length; i++) {\n                var c = ca[i];\n                while (c.charAt(0) == ' ') {\n                    c = c.substring(1, c.length);\n                }\n                if (c.indexOf(nameEQ) === 0) {\n                    return decodeURIComponent(c.substring(nameEQ.length, c.length));\n                }\n            }\n        } catch(err) {} \n        return null;\n    },\n\n    parse: function(name) {\n        var cookie;\n        try {\n            cookie = _.JSONDecode(_.cookie.get(name)) || {};\n        } catch (err) {\n            // noop\n        }\n        return cookie;\n    },\n\n    set_seconds: function(name, value, seconds, cross_subdomain, is_secure) {\n        try {\n            var cdomain = '',\n                expires = '',\n                secure = '';\n\n            if (cross_subdomain) {\n                var matches = document.location.hostname.match(DOMAIN_MATCH_REGEX),\n                    domain = matches ? matches[0] : '';\n\n                cdomain = ((domain) ? '; domain=.' + domain : '');\n            }\n\n            if (seconds) {\n                var date = new Date();\n                date.setTime(date.getTime() + (seconds * 1000));\n                expires = '; expires=' + date.toGMTString();\n            }\n\n            if (is_secure) {\n                secure = '; secure';\n            }\n\n            document.cookie = name + '=' + encodeURIComponent(value) + expires + '; path=/' + cdomain + secure;\n        } catch(err) { return }\n    },\n\n    set: function(name, value, days, cross_subdomain, is_secure) {\n        try {\n            var cdomain = '', expires = '', secure = '';\n\n            if (cross_subdomain) {\n                var matches = document.location.hostname.match(DOMAIN_MATCH_REGEX),\n                    domain = matches ? matches[0] : '';\n\n                cdomain   = ((domain) ? '; domain=.' + domain : '');\n            }\n\n            if (days) {\n                var date = new Date();\n                date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\n                expires = '; expires=' + date.toGMTString();\n            }\n\n            if (is_secure) {\n                secure = '; secure';\n            }\n\n            var new_cookie_val = name + '=' + encodeURIComponent(value) + expires + '; path=/' + cdomain + secure;\n            document.cookie = new_cookie_val;\n            return new_cookie_val;\n        } catch(err) { return }\n    },\n\n    remove: function(name, cross_subdomain) {\n        try {\n            _.cookie.set(name, '', -1, cross_subdomain);\n        } catch(err) { return }\n    }\n};\n\n// _.localStorage\nvar _localStorage_supported = null;\n_.localStorage = {\n    is_supported: function() {\n        if (_localStorage_supported !== null) {\n            return _localStorage_supported;\n        }\n\n        var supported = true;\n        try {\n            var key = '__mplssupport__',\n                val = 'xyz';\n            _.localStorage.set(key, val);\n            if (_.localStorage.get(key) !== val) {\n                supported = false;\n            }\n            _.localStorage.remove(key);\n        } catch (err) {\n            supported = false;\n        }\n        if (!supported) {\n            console.error('localStorage unsupported; falling back to cookie store');\n        }\n\n        _localStorage_supported = supported;\n        return supported;\n    },\n\n    error: function(msg) {\n        console.error('localStorage error: ' + msg);\n    },\n\n    get: function(name) {\n        try {\n            return window.localStorage.getItem(name);\n        } catch (err) {\n            _.localStorage.error(err);\n        }\n        return null;\n    },\n\n    parse: function(name) {\n        try {\n            return _.JSONDecode(_.localStorage.get(name)) || {};\n        } catch (err) {\n            // noop\n        }\n        return null;\n    },\n\n    set: function(name, value) {\n        try {\n            window.localStorage.setItem(name, value);\n        } catch (err) {\n            _.localStorage.error(err);\n        }\n    },\n\n    remove: function(name) {\n        try {\n            window.localStorage.removeItem(name);\n        } catch (err) {\n            _.localStorage.error(err);\n        }\n    }\n};\n\n_.register_event = (function() {\n    // written by Dean Edwards, 2005\n    // with input from Tino Zijdel - crisp@xs4all.nl\n    // with input from Carl Sverre - mail@carlsverre.com\n    // with input from PostHog\n    // http://dean.edwards.name/weblog/2005/10/add-event/\n    // https://gist.github.com/1930440\n\n    /**\n     * @param {Object} element\n     * @param {string} type\n     * @param {function(...*)} handler\n     * @param {boolean=} oldSchool\n     * @param {boolean=} useCapture\n     */\n    var register_event = function(element, type, handler, oldSchool, useCapture) {\n        if (!element) {\n            console.error('No valid element provided to register_event');\n            return;\n        }\n\n        if (element.addEventListener && !oldSchool) {\n            element.addEventListener(type, handler, !!useCapture);\n        } else {\n            var ontype = 'on' + type;\n            var old_handler = element[ontype]; // can be undefined\n            element[ontype] = makeHandler(element, handler, old_handler);\n        }\n    };\n\n    function makeHandler(element, new_handler, old_handlers) {\n        var handler = function(event) {\n            event = event || fixEvent(window.event);\n\n            // this basically happens in firefox whenever another script\n            // overwrites the onload callback and doesn't pass the event\n            // object to previously defined callbacks.  All the browsers\n            // that don't define window.event implement addEventListener\n            // so the dom_loaded handler will still be fired as usual.\n            if (!event) {\n                return undefined;\n            }\n\n            var ret = true;\n            var old_result, new_result;\n\n            if (_.isFunction(old_handlers)) {\n                old_result = old_handlers(event);\n            }\n            new_result = new_handler.call(element, event);\n\n            if ((false === old_result) || (false === new_result)) {\n                ret = false;\n            }\n\n            return ret;\n        };\n\n        return handler;\n    }\n\n    function fixEvent(event) {\n        if (event) {\n            event.preventDefault = fixEvent.preventDefault;\n            event.stopPropagation = fixEvent.stopPropagation;\n        }\n        return event;\n    }\n    fixEvent.preventDefault = function() {\n        this.returnValue = false;\n    };\n    fixEvent.stopPropagation = function() {\n        this.cancelBubble = true;\n    };\n\n    return register_event;\n})();\n\n\nvar TOKEN_MATCH_REGEX = new RegExp('^(\\\\w*)\\\\[(\\\\w+)([=~\\\\|\\\\^\\\\$\\\\*]?)=?\"?([^\\\\]\"]*)\"?\\\\]$');\n\n_.dom_query = (function() {\n    /* document.getElementsBySelector(selector)\n    - returns an array of element objects from the current document\n    matching the CSS selector. Selectors can contain element names,\n    class names and ids and can be nested. For example:\n\n    elements = document.getElementsBySelector('div#main p a.external')\n\n    Will return an array of all 'a' elements with 'external' in their\n    class attribute that are contained inside 'p' elements that are\n    contained inside the 'div' element which has id=\"main\"\n\n    New in version 0.4: Support for CSS2 and CSS3 attribute selectors:\n    See http://www.w3.org/TR/css3-selectors/#attribute-selectors\n\n    Version 0.4 - Simon Willison, March 25th 2003\n    -- Works in Phoenix 0.5, Mozilla 1.3, Opera 7, Internet Explorer 6, Internet Explorer 5 on Windows\n    -- Opera 7 fails\n\n    Version 0.5 - Carl Sverre, Jan 7th 2013\n    -- Now uses jQuery-esque `hasClass` for testing class name\n    equality.  This fixes a bug related to '-' characters being\n    considered not part of a 'word' in regex.\n    */\n\n    function getAllChildren(e) {\n        // Returns all children of element. Workaround required for IE5/Windows. Ugh.\n        return e.all ? e.all : e.getElementsByTagName('*');\n    }\n\n    var bad_whitespace = /[\\t\\r\\n]/g;\n\n    function hasClass(elem, selector) {\n        var className = ' ' + selector + ' ';\n        return ((' ' + elem.className + ' ').replace(bad_whitespace, ' ').indexOf(className) >= 0);\n    }\n\n    function getElementsBySelector(selector) {\n        // Attempt to fail gracefully in lesser browsers\n        if (!document.getElementsByTagName) {\n            return [];\n        }\n        // Split selector in to tokens\n        var tokens = selector.split(' ');\n        var token, bits, tagName, found, foundCount, i, j, k, elements, currentContextIndex;\n        var currentContext = [document];\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i].replace(/^\\s+/, '').replace(/\\s+$/, '');\n            if (token.indexOf('#') > -1) {\n                // Token is an ID selector\n                bits = token.split('#');\n                tagName = bits[0];\n                var id = bits[1];\n                var element = document.getElementById(id);\n                if (!element || (tagName && element.nodeName.toLowerCase() != tagName)) {\n                    // element not found or tag with that ID not found, return false\n                    return [];\n                }\n                // Set currentContext to contain just this element\n                currentContext = [element];\n                continue; // Skip to next token\n            }\n            if (token.indexOf('.') > -1) {\n                // Token contains a class selector\n                bits = token.split('.');\n                tagName = bits[0];\n                var className = bits[1];\n                if (!tagName) {\n                    tagName = '*';\n                }\n                // Get elements matching tag, filter them for class selector\n                found = [];\n                foundCount = 0;\n                for (j = 0; j < currentContext.length; j++) {\n                    if (tagName == '*') {\n                        elements = getAllChildren(currentContext[j]);\n                    } else {\n                        elements = currentContext[j].getElementsByTagName(tagName);\n                    }\n                    for (k = 0; k < elements.length; k++) {\n                        found[foundCount++] = elements[k];\n                    }\n                }\n                currentContext = [];\n                currentContextIndex = 0;\n                for (j = 0; j < found.length; j++) {\n                    if (found[j].className &&\n                        _.isString(found[j].className) && // some SVG elements have classNames which are not strings\n                        hasClass(found[j], className)\n                    ) {\n                        currentContext[currentContextIndex++] = found[j];\n                    }\n                }\n                continue; // Skip to next token\n            }\n            // Code to deal with attribute selectors\n            var token_match = token.match(TOKEN_MATCH_REGEX);\n            if (token_match) {\n                tagName = token_match[1];\n                var attrName = token_match[2];\n                var attrOperator = token_match[3];\n                var attrValue = token_match[4];\n                if (!tagName) {\n                    tagName = '*';\n                }\n                // Grab all of the tagName elements within current context\n                found = [];\n                foundCount = 0;\n                for (j = 0; j < currentContext.length; j++) {\n                    if (tagName == '*') {\n                        elements = getAllChildren(currentContext[j]);\n                    } else {\n                        elements = currentContext[j].getElementsByTagName(tagName);\n                    }\n                    for (k = 0; k < elements.length; k++) {\n                        found[foundCount++] = elements[k];\n                    }\n                }\n                currentContext = [];\n                currentContextIndex = 0;\n                var checkFunction; // This function will be used to filter the elements\n                switch (attrOperator) {\n                    case '=': // Equality\n                        checkFunction = function(e) {\n                            return (e.getAttribute(attrName) == attrValue);\n                        };\n                        break;\n                    case '~': // Match one of space seperated words\n                        checkFunction = function(e) {\n                            return (e.getAttribute(attrName).match(new RegExp('\\\\b' + attrValue + '\\\\b')));\n                        };\n                        break;\n                    case '|': // Match start with value followed by optional hyphen\n                        checkFunction = function(e) {\n                            return (e.getAttribute(attrName).match(new RegExp('^' + attrValue + '-?')));\n                        };\n                        break;\n                    case '^': // Match starts with value\n                        checkFunction = function(e) {\n                            return (e.getAttribute(attrName).indexOf(attrValue) === 0);\n                        };\n                        break;\n                    case '$': // Match ends with value - fails with \"Warning\" in Opera 7\n                        checkFunction = function(e) {\n                            return (e.getAttribute(attrName).lastIndexOf(attrValue) == e.getAttribute(attrName).length - attrValue.length);\n                        };\n                        break;\n                    case '*': // Match ends with value\n                        checkFunction = function(e) {\n                            return (e.getAttribute(attrName).indexOf(attrValue) > -1);\n                        };\n                        break;\n                    default:\n                        // Just test for existence of attribute\n                        checkFunction = function(e) {\n                            return e.getAttribute(attrName);\n                        };\n                }\n                currentContext = [];\n                currentContextIndex = 0;\n                for (j = 0; j < found.length; j++) {\n                    if (checkFunction(found[j])) {\n                        currentContext[currentContextIndex++] = found[j];\n                    }\n                }\n                // alert('Attribute Selector: '+tagName+' '+attrName+' '+attrOperator+' '+attrValue);\n                continue; // Skip to next token\n            }\n            // If we get here, token is JUST an element (not a class or ID selector)\n            tagName = token;\n            found = [];\n            foundCount = 0;\n            for (j = 0; j < currentContext.length; j++) {\n                elements = currentContext[j].getElementsByTagName(tagName);\n                for (k = 0; k < elements.length; k++) {\n                    found[foundCount++] = elements[k];\n                }\n            }\n            currentContext = found;\n        }\n        return currentContext;\n    }\n\n    return function(query) {\n        if (_.isElement(query)) {\n            return [query];\n        } else if (_.isObject(query) && !_.isUndefined(query.length)) {\n            return query;\n        } else {\n            return getElementsBySelector.call(this, query);\n        }\n    };\n})();\n\n_.info = {\n    campaignParams: function() {\n        var campaign_keywords = 'utm_source utm_medium utm_campaign utm_content utm_term'.split(' '),\n            kw = '',\n            params = {};\n        _.each(campaign_keywords, function(kwkey) {\n            kw = _.getQueryParam(document.URL, kwkey);\n            if (kw.length) {\n                params[kwkey] = kw;\n            }\n        });\n\n        return params;\n    },\n\n    searchEngine: function(referrer) {\n        if (referrer.search('https?://(.*)google.([^/?]*)') === 0) {\n            return 'google';\n        } else if (referrer.search('https?://(.*)bing.com') === 0) {\n            return 'bing';\n        } else if (referrer.search('https?://(.*)yahoo.com') === 0) {\n            return 'yahoo';\n        } else if (referrer.search('https?://(.*)duckduckgo.com') === 0) {\n            return 'duckduckgo';\n        } else {\n            return null;\n        }\n    },\n\n    searchInfo: function(referrer) {\n        var search = _.info.searchEngine(referrer),\n            param = (search != 'yahoo') ? 'q' : 'p',\n            ret = {};\n\n        if (search !== null) {\n            ret['$search_engine'] = search;\n\n            var keyword = _.getQueryParam(referrer, param);\n            if (keyword.length) {\n                ret['ph_keyword'] = keyword;\n            }\n        }\n\n        return ret;\n    },\n\n    /**\n     * This function detects which browser is running this script.\n     * The order of the checks are important since many user agents\n     * include key words used in later checks.\n     */\n    browser: function(user_agent, vendor, opera) {\n        vendor = vendor || ''; // vendor is undefined for at least IE9\n        if (opera || _.includes(user_agent, ' OPR/')) {\n            if (_.includes(user_agent, 'Mini')) {\n                return 'Opera Mini';\n            }\n            return 'Opera';\n        } else if (/(BlackBerry|PlayBook|BB10)/i.test(user_agent)) {\n            return 'BlackBerry';\n        } else if (_.includes(user_agent, 'IEMobile') || _.includes(user_agent, 'WPDesktop')) {\n            return 'Internet Explorer Mobile';\n        } else if (_.includes(user_agent, 'SamsungBrowser/')) {\n            // https://developer.samsung.com/internet/user-agent-string-format\n            return 'Samsung Internet';\n        } else if (_.includes(user_agent, 'Edge') || _.includes(user_agent, 'Edg/')) {\n            return 'Microsoft Edge';\n        } else if (_.includes(user_agent, 'FBIOS')) {\n            return 'Facebook Mobile';\n        } else if (_.includes(user_agent, 'Chrome')) {\n            return 'Chrome';\n        } else if (_.includes(user_agent, 'CriOS')) {\n            return 'Chrome iOS';\n        } else if (_.includes(user_agent, 'UCWEB') || _.includes(user_agent, 'UCBrowser')) {\n            return 'UC Browser';\n        } else if (_.includes(user_agent, 'FxiOS')) {\n            return 'Firefox iOS';\n        } else if (_.includes(vendor, 'Apple')) {\n            if (_.includes(user_agent, 'Mobile')) {\n                return 'Mobile Safari';\n            }\n            return 'Safari';\n        } else if (_.includes(user_agent, 'Android')) {\n            return 'Android Mobile';\n        } else if (_.includes(user_agent, 'Konqueror')) {\n            return 'Konqueror';\n        } else if (_.includes(user_agent, 'Firefox')) {\n            return 'Firefox';\n        } else if (_.includes(user_agent, 'MSIE') || _.includes(user_agent, 'Trident/')) {\n            return 'Internet Explorer';\n        } else if (_.includes(user_agent, 'Gecko')) {\n            return 'Mozilla';\n        } else {\n            return '';\n        }\n    },\n\n    /**\n     * This function detects which browser version is running this script,\n     * parsing major and minor version (e.g., 42.1). User agent strings from:\n     * http://www.useragentstring.com/pages/useragentstring.php\n     */\n    browserVersion: function(userAgent, vendor, opera) {\n        var browser = _.info.browser(userAgent, vendor, opera);\n        var versionRegexs = {\n            'Internet Explorer Mobile': /rv:(\\d+(\\.\\d+)?)/,\n            'Microsoft Edge': /Edge?\\/(\\d+(\\.\\d+)?)/,\n            'Chrome': /Chrome\\/(\\d+(\\.\\d+)?)/,\n            'Chrome iOS': /CriOS\\/(\\d+(\\.\\d+)?)/,\n            'UC Browser' : /(UCBrowser|UCWEB)\\/(\\d+(\\.\\d+)?)/,\n            'Safari': /Version\\/(\\d+(\\.\\d+)?)/,\n            'Mobile Safari': /Version\\/(\\d+(\\.\\d+)?)/,\n            'Opera': /(Opera|OPR)\\/(\\d+(\\.\\d+)?)/,\n            'Firefox': /Firefox\\/(\\d+(\\.\\d+)?)/,\n            'Firefox iOS': /FxiOS\\/(\\d+(\\.\\d+)?)/,\n            'Konqueror': /Konqueror:(\\d+(\\.\\d+)?)/,\n            'BlackBerry': /BlackBerry (\\d+(\\.\\d+)?)/,\n            'Android Mobile': /android\\s(\\d+(\\.\\d+)?)/,\n            'Samsung Internet': /SamsungBrowser\\/(\\d+(\\.\\d+)?)/,\n            'Internet Explorer': /(rv:|MSIE )(\\d+(\\.\\d+)?)/,\n            'Mozilla': /rv:(\\d+(\\.\\d+)?)/\n        };\n        var regex = versionRegexs[browser];\n        if (regex === undefined) {\n            return null;\n        }\n        var matches = userAgent.match(regex);\n        if (!matches) {\n            return null;\n        }\n        return parseFloat(matches[matches.length - 2]);\n    },\n\n    os: function() {\n        var a = userAgent;\n        if (/Windows/i.test(a)) {\n            if (/Phone/.test(a) || /WPDesktop/.test(a)) {\n                return 'Windows Phone';\n            }\n            return 'Windows';\n        } else if (/(iPhone|iPad|iPod)/.test(a)) {\n            return 'iOS';\n        } else if (/Android/.test(a)) {\n            return 'Android';\n        } else if (/(BlackBerry|PlayBook|BB10)/i.test(a)) {\n            return 'BlackBerry';\n        } else if (/Mac/i.test(a)) {\n            return 'Mac OS X';\n        } else if (/Linux/.test(a)) {\n            return 'Linux';\n        } else if (/CrOS/.test(a)) {\n            return 'Chrome OS';\n        } else {\n            return '';\n        }\n    },\n\n    device: function(user_agent) {\n        if (/Windows Phone/i.test(user_agent) || /WPDesktop/.test(user_agent)) {\n            return 'Windows Phone';\n        } else if (/iPad/.test(user_agent)) {\n            return 'iPad';\n        } else if (/iPod/.test(user_agent)) {\n            return 'iPod Touch';\n        } else if (/iPhone/.test(user_agent)) {\n            return 'iPhone';\n        } else if (/(BlackBerry|PlayBook|BB10)/i.test(user_agent)) {\n            return 'BlackBerry';\n        } else if (/Android/.test(user_agent)) {\n            return 'Android';\n        } else {\n            return '';\n        }\n    },\n\n    referringDomain: function(referrer) {\n        var split = referrer.split('/');\n        if (split.length >= 3) {\n            return split[2];\n        }\n        return '';\n    },\n\n    properties: function() {\n        return _.extend(_.strip_empty_properties({\n            '$os': _.info.os(),\n            '$browser': _.info.browser(userAgent, navigator.vendor, windowOpera),\n            '$referrer': document.referrer,\n            '$referring_domain': _.info.referringDomain(document.referrer),\n            '$device': _.info.device(userAgent)\n        }), {\n            '$current_url': win.location.href,\n            '$browser_version': _.info.browserVersion(userAgent, navigator.vendor, windowOpera),\n            '$screen_height': screen.height,\n            '$screen_width': screen.width,\n            '$lib': 'web',\n            '$lib_version': Config.LIB_VERSION,\n            '$insert_id': Math.random().toString(36).substring(2, 10) + Math.random().toString(36).substring(2, 10),\n            '$time': _.timestamp() / 1000 // epoch time in seconds\n        });\n    },\n\n    people_properties: function() {\n        return _.extend(_.strip_empty_properties({\n            '$os': _.info.os(),\n            '$browser': _.info.browser(userAgent, navigator.vendor, windowOpera)\n        }), {\n            '$browser_version': _.info.browserVersion(userAgent, navigator.vendor, windowOpera)\n        });\n    }\n};\n\n// EXPORTS (for closure compiler)\n_['toArray']                = _.toArray;\n_['isObject']               = _.isObject;\n_['JSONEncode']             = _.JSONEncode;\n_['JSONDecode']             = _.JSONDecode;\n_['isBlockedUA']            = _.isBlockedUA;\n_['isEmptyObject']          = _.isEmptyObject;\n_['info']                   = _.info;\n_['info']['device']         = _.info.device;\n_['info']['browser']        = _.info.browser;\n_['info']['browserVersion'] = _.info.browserVersion;\n_['info']['properties']     = _.info.properties;\n\nexport { _, userAgent, console, win as window, document, navigator };\n","import { _ } from './utils';\n\n/*\n * Get the className of an element, accounting for edge cases where element.className is an object\n * @param {Element} el - element to get the className of\n * @returns {string} the element's class\n */\nexport function getClassName(el) {\n    switch(typeof el.className) {\n        case 'string':\n            return el.className;\n        case 'object': // handle cases where className might be SVGAnimatedString or some other type\n            return el.className.baseVal || el.getAttribute('class') || '';\n        default: // future proof\n            return '';\n    }\n}\n\n/*\n * Get the direct text content of an element, protecting against sensitive data collection.\n * Concats textContent of each of the element's text node children; this avoids potential\n * collection of sensitive data that could happen if we used element.textContent and the\n * element had sensitive child elements, since element.textContent includes child content.\n * Scrubs values that look like they could be sensitive (i.e. cc or ssn number).\n * @param {Element} el - element to get the text of\n * @returns {string} the element's direct text content\n */\nexport function getSafeText(el) {\n    var elText = '';\n\n    if (shouldCaptureElement(el) && el.childNodes && el.childNodes.length) {\n        _.each(el.childNodes, function(child) {\n            if (isTextNode(child) && child.textContent) {\n                elText += _.trim(child.textContent)\n                    // scrub potentially sensitive values\n                    .split(/(\\s+)/).filter(shouldCaptureValue).join('')\n                    // normalize whitespace\n                    .replace(/[\\r\\n]/g, ' ').replace(/[ ]+/g, ' ')\n                    // truncate\n                    .substring(0, 255);\n            }\n        });\n    }\n\n    return _.trim(elText);\n}\n\n/*\n * Check whether an element has nodeType Node.ELEMENT_NODE\n * @param {Element} el - element to check\n * @returns {boolean} whether el is of the correct nodeType\n */\nexport function isElementNode(el) {\n    return el && el.nodeType === 1; // Node.ELEMENT_NODE - use integer constant for browser portability\n}\n\n/*\n * Check whether an element is of a given tag type.\n * Due to potential reference discrepancies (such as the webcomponents.js polyfill),\n * we want to match tagNames instead of specific references because something like\n * element === document.body won't always work because element might not be a native\n * element.\n * @param {Element} el - element to check\n * @param {string} tag - tag name (e.g., \"div\")\n * @returns {boolean} whether el is of the given tag type\n */\nexport function isTag(el, tag) {\n    return el && el.tagName && el.tagName.toLowerCase() === tag.toLowerCase();\n}\n\n/*\n * Check whether an element has nodeType Node.TEXT_NODE\n * @param {Element} el - element to check\n * @returns {boolean} whether el is of the correct nodeType\n */\nexport function isTextNode(el) {\n    return el && el.nodeType === 3; // Node.TEXT_NODE - use integer constant for browser portability\n}\n\nexport var usefulElements = ['a', 'button', 'form', 'input', 'select', 'textarea', 'label'];\n/*\n * Check whether a DOM event should be \"captureed\" or if it may contain sentitive data\n * using a variety of heuristics.\n * @param {Element} el - element to check\n * @param {Event} event - event to check\n * @returns {boolean} whether the event should be captureed\n */\nexport function shouldCaptureDomEvent(el, event) {\n    if (!el || isTag(el, 'html') || !isElementNode(el)) {\n        return false;\n    }\n\n    var parentIsUsefulElement = false;\n    var targetElementList = [el];\n    var curEl = el;\n    while (curEl.parentNode && !isTag(curEl, 'body')) {\n        if(usefulElements.indexOf(curEl.parentNode.tagName.toLowerCase()) > -1) parentIsUsefulElement = true;\n        targetElementList.push(curEl.parentNode);\n        curEl = curEl.parentNode;\n    }\n    var tag = el.tagName.toLowerCase();\n    switch (tag) {\n        case 'html':\n            return false;\n        case 'form':\n            return event.type === 'submit';\n        case 'input':\n            return event.type === 'change' || event.type === 'click';\n        case 'select':\n        case 'textarea':\n            return event.type === 'change' || event.type === 'click';\n        default:\n            if(parentIsUsefulElement) return event.type == 'click';\n            return event.type === 'click' && (usefulElements.indexOf(tag) > -1 || el.getAttribute('contenteditable') === 'true');\n    }\n}\n\n/*\n * Check whether a DOM element should be \"captureed\" or if it may contain sentitive data\n * using a variety of heuristics.\n * @param {Element} el - element to check\n * @returns {boolean} whether the element should be captureed\n */\nexport function shouldCaptureElement(el) {\n    for (var curEl = el; curEl.parentNode && !isTag(curEl, 'body'); curEl = curEl.parentNode) {\n        var classes = getClassName(curEl).split(' ');\n        if (_.includes(classes, 'ph-sensitive') || _.includes(classes, 'ph-no-capture')) {\n            return false;\n        }\n    }\n\n    if (_.includes(getClassName(el).split(' '), 'ph-include')) {\n        return true;\n    }\n\n    // don't send data from inputs or similar elements since there will always be\n    // a risk of clientside javascript placing sensitive data in attributes\n    if (\n        (isTag(el, 'input') && el.type != 'button') ||\n        isTag(el, 'select') ||\n        isTag(el, 'textarea') ||\n        el.getAttribute('contenteditable') === 'true'\n    ) {\n        return false;\n    }\n\n    // don't include hidden or password fields\n    var type = el.type || '';\n    if (typeof type === 'string') { // it's possible for el.type to be a DOM element if el is a form with a child input[name=\"type\"]\n        switch(type.toLowerCase()) {\n            case 'hidden':\n                return false;\n            case 'password':\n                return false;\n        }\n    }\n\n    // filter out data from fields that look like sensitive fields\n    var name = el.name || el.id || '';\n    if (typeof name === 'string') { // it's possible for el.name or el.id to be a DOM element if el is a form with a child input[name=\"name\"]\n        var sensitiveNameRegex = /^cc|cardnum|ccnum|creditcard|csc|cvc|cvv|exp|pass|pwd|routing|seccode|securitycode|securitynum|socialsec|socsec|ssn/i;\n        if (sensitiveNameRegex.test(name.replace(/[^a-zA-Z0-9]/g, ''))) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/*\n * Check whether a string value should be \"captureed\" or if it may contain sentitive data\n * using a variety of heuristics.\n * @param {string} value - string value to check\n * @returns {boolean} whether the element should be captureed\n */\nexport function shouldCaptureValue(value) {\n    if (value === null || _.isUndefined(value)) {\n        return false;\n    }\n\n    if (typeof value === 'string') {\n        value = _.trim(value);\n\n        // check to see if input value looks like a credit card number\n        // see: https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9781449327453/ch04s20.html\n        var ccRegex = /^(?:(4[0-9]{12}(?:[0-9]{3})?)|(5[1-5][0-9]{14})|(6(?:011|5[0-9]{2})[0-9]{12})|(3[47][0-9]{13})|(3(?:0[0-5]|[68][0-9])[0-9]{11})|((?:2131|1800|35[0-9]{3})[0-9]{11}))$/;\n        if (ccRegex.test((value || '').replace(/[- ]/g, ''))) {\n            return false;\n        }\n\n        // check to see if input value looks like a social security number\n        var ssnRegex = /(^\\d{3}-?\\d{2}-?\\d{4}$)/;\n        if (ssnRegex.test(value)) {\n            return false;\n        }\n    }\n\n    return true;\n}\n","import { _ } from './utils';\nimport {\n    getClassName,\n    getSafeText,\n    isElementNode,\n    isTag,\n    isTextNode,\n    shouldCaptureDomEvent,\n    shouldCaptureElement,\n    shouldCaptureValue,\n    usefulElements\n} from './autocapture-utils';\n\nvar autocapture = {\n    _initializedTokens: [],\n\n    _previousElementSibling: function(el) {\n        if (el.previousElementSibling) {\n            return el.previousElementSibling;\n        } else {\n            do {\n                el = el.previousSibling;\n            } while (el && !isElementNode(el));\n            return el;\n        }\n    },\n\n    _loadScript: function(scriptUrlToLoad, callback) {\n        var scriptTag = document.createElement('script');\n        scriptTag.type = 'text/javascript';\n        scriptTag.src = scriptUrlToLoad;\n        scriptTag.onload = callback;\n\n        var scripts = document.getElementsByTagName('script');\n        if (scripts.length > 0) {\n            scripts[0].parentNode.insertBefore(scriptTag, scripts[0]);\n        } else {\n            document.body.appendChild(scriptTag);\n        }\n    },\n\n    _getPropertiesFromElement: function(elem) {\n        var tag_name = elem.tagName.toLowerCase();\n        var props = {\n            'tag_name': tag_name\n        };\n        if(usefulElements.indexOf(tag_name) > -1) props['$el_text'] = getSafeText(elem);\n\n        var classes = getClassName(elem);\n        if(classes.length > 0) props['classes'] = classes.split(' ');\n\n        if (shouldCaptureElement(elem)) {\n            _.each(elem.attributes, function(attr) {\n                if (shouldCaptureValue(attr.value)) {\n                    props['attr__' + attr.name] = attr.value;\n                }\n            });\n        }\n\n        var nthChild = 1;\n        var nthOfType = 1;\n        var currentElem = elem;\n        while (currentElem = this._previousElementSibling(currentElem)) { // eslint-disable-line no-cond-assign\n            nthChild++;\n            if (currentElem.tagName === elem.tagName) {\n                nthOfType++;\n            }\n        }\n        props['nth_child'] = nthChild;\n        props['nth_of_type'] = nthOfType;\n\n        return props;\n    },\n\n    _getDefaultProperties: function(eventType) {\n        return {\n            '$event_type': eventType,\n            '$ce_version': 1,\n            '$host': window.location.host,\n            '$pathname': window.location.pathname\n        };\n    },\n\n    _extractCustomPropertyValue: function(customProperty) {\n        var propValues = [];\n        _.each(document.querySelectorAll(customProperty['css_selector']), function(matchedElem) {\n            var value;\n\n            if (['input', 'select'].indexOf(matchedElem.tagName.toLowerCase()) > -1) {\n                value = matchedElem['value'];\n            } else if (matchedElem['textContent']) {\n                value = matchedElem['textContent'];\n            }\n\n            if (shouldCaptureValue(value)) {\n                propValues.push(value);\n            }\n        });\n        return propValues.join(', ');\n    },\n\n    _getCustomProperties: function(targetElementList) {\n        var props = {};\n        _.each(this._customProperties, function(customProperty) {\n            _.each(customProperty['event_selectors'], function(eventSelector) {\n                var eventElements = document.querySelectorAll(eventSelector);\n                _.each(eventElements, function(eventElement) {\n                    if (_.includes(targetElementList, eventElement) && shouldCaptureElement(eventElement)) {\n                        props[customProperty['name']] = this._extractCustomPropertyValue(customProperty);\n                    }\n                }, this);\n            }, this);\n        }, this);\n        return props;\n    },\n\n    _getEventTarget: function(e) {\n        // https://developer.mozilla.org/en-US/docs/Web/API/Event/target#Compatibility_notes\n        if (typeof e.target === 'undefined') {\n            return e.srcElement;\n        } else {\n            return e.target;\n        }\n    },\n\n    _captureEvent: function(e, instance) {\n        /*** Don't mess with this code without running IE8 tests on it ***/\n        var target = this._getEventTarget(e);\n        if (isTextNode(target)) { // defeat Safari bug (see: http://www.quirksmode.org/js/events_properties.html)\n            target = target.parentNode;\n        }\n\n        if (shouldCaptureDomEvent(target, e)) {\n            var targetElementList = [target];\n            var curEl = target;\n            while (curEl.parentNode && !isTag(curEl, 'body')) {\n                targetElementList.push(curEl.parentNode);\n                curEl = curEl.parentNode;\n            }\n\n            var elementsJson = [];\n            var href, explicitNoCapture = false;\n            _.each(targetElementList, function(el) {\n                var shouldCaptureEl = shouldCaptureElement(el);\n\n                // if the element or a parent element is an anchor tag\n                // include the href as a property\n                if (el.tagName.toLowerCase() === 'a') {\n                    href = el.getAttribute('href');\n                    href = shouldCaptureEl && shouldCaptureValue(href) && href;\n                }\n\n                // allow users to programatically prevent captureing of elements by adding class 'ph-no-capture'\n                var classes = getClassName(el).split(' ');\n                if (_.includes(classes, 'ph-no-capture')) {\n                    explicitNoCapture = true;\n                }\n\n                elementsJson.push(this._getPropertiesFromElement(el));\n            }, this);\n\n            elementsJson[0]['$el_text'] = getSafeText(target);\n\n            if (explicitNoCapture) {\n                return false;\n            }\n\n            // only populate text content from target element (not parents)\n            // to prevent text within a sensitive element from being collected\n            // as part of a parent's el.textContent\n            var elementText;\n            var safeElementText = getSafeText(target);\n            if (safeElementText && safeElementText.length) {\n                elementText = safeElementText;\n            }\n\n            var props = _.extend(\n                this._getDefaultProperties(e.type),\n                {\n                    '$elements':  elementsJson\n                },\n                this._getCustomProperties(targetElementList)\n            );\n\n            instance.capture('$autocapture', props);\n            return true;\n        }\n    },\n\n    // only reason is to stub for unit tests\n    // since you can't override window.location props\n    _navigate: function(href) {\n        window.location.href = href;\n    },\n\n    _addDomEventHandlers: function(instance) {\n        var handler = _.bind(function(e) {\n            e = e || window.event;\n            this._captureEvent(e, instance);\n        }, this);\n        _.register_event(document, 'submit', handler, false, true);\n        _.register_event(document, 'change', handler, false, true);\n        _.register_event(document, 'click', handler, false, true);\n    },\n\n    _customProperties: {},\n    init: function(instance) {\n        if (!(document && document.body)) {\n            console.log('document not ready yet, trying again in 500 milliseconds...');\n            var that = this;\n            setTimeout(function() { that.init(instance); }, 500);\n            return;\n        }\n\n        var token = instance.get_config('token');\n        if (this._initializedTokens.indexOf(token) > -1) {\n            console.log('autocapture already initialized for token \"' + token + '\"');\n            return;\n        }\n        this._initializedTokens.push(token);\n\n        if (!this._maybeLoadEditor(instance)) { // don't autocapture actions when the editor is enabled\n            var parseDecideResponse = _.bind(function(response) {\n                if (response && response['config'] && response['config']['enable_collect_everything'] === true) {\n\n                    if (response['custom_properties']) {\n                        this._customProperties = response['custom_properties'];\n                    }\n\n                    this._addDomEventHandlers(instance);\n\n                } else {\n                    instance['__autocapture_enabled'] = false;\n                }\n            }, this);\n\n            instance._send_request(\n                instance.get_config('api_host') + '/decide/', {\n                    'verbose': true,\n                    'version': '1',\n                    'lib': 'web',\n                    'token': token\n                },\n                {method: 'GET'},\n                instance._prepare_callback(parseDecideResponse)\n            );\n        }\n    },\n\n    _editorParamsFromHash: function(instance, hash) {\n        var editorParams;\n        try {\n            var state = _.getHashParam(hash, 'state');\n            state = JSON.parse(decodeURIComponent(state));\n            var expiresInSeconds = _.getHashParam(hash, 'expires_in');\n            editorParams = {\n                'accessToken': _.getHashParam(hash, 'access_token'),\n                'accessTokenExpiresAt': (new Date()).getTime() + (Number(expiresInSeconds) * 1000),\n                'actionId': state['actionId'],\n                'projectToken': state['token'],\n                'apiURL': state['apiURL'],\n                'temporaryToken': state['temporaryToken']\n            };\n            window.sessionStorage.setItem('editorParams', JSON.stringify(editorParams));\n            window.sessionStorage.setItem('editorActionId', editorParams['actionId']);\n\n            if (state['desiredHash']) {\n                window.location.hash = state['desiredHash'];\n            } else if (window.history) {\n                history.replaceState('', document.title, window.location.pathname + window.location.search); // completely remove hash\n            } else {\n                window.location.hash = ''; // clear hash (but leaves # unfortunately)\n            }\n        } catch (e) {\n            console.error('Unable to parse data from hash', e);\n        }\n        return editorParams;\n    },\n\n    /**\n     * To load the visual editor, we need an access token and other state. That state comes from one of three places:\n     * 1. In the URL hash params if the customer is using an old snippet\n     * 2. From session storage under the key `_mpcehash` if the snippet already parsed the hash\n     * 3. From session storage under the key `editorParams` if the editor was initialized on a previous page\n     */\n    _maybeLoadEditor: function(instance) {\n        try {\n            var parseFromUrl = false;\n            if (_.getHashParam(window.location.hash, 'state')) {\n                var state = _.getHashParam(window.location.hash, 'state');\n                state = JSON.parse(decodeURIComponent(state));\n                parseFromUrl = state['action'] === 'mpeditor';\n            }\n            var parseFromStorage = !!window.sessionStorage.getItem('_mpcehash');\n            var editorParams;\n\n            if (parseFromUrl) { // happens if they are initializing the editor using an old snippet\n                editorParams = this._editorParamsFromHash(instance, window.location.hash);\n            } else if (parseFromStorage) { // happens if they are initialized the editor and using the new snippet\n                editorParams = this._editorParamsFromHash(instance, window.sessionStorage.getItem('_mpcehash'));\n                window.sessionStorage.removeItem('_mpcehash');\n            } else { // get credentials from sessionStorage from a previous initialzation\n                editorParams = JSON.parse(window.sessionStorage.getItem('editorParams') || '{}');\n            }\n\n            if (editorParams['projectToken'] && instance.get_config('token') === editorParams['projectToken']) {\n                this._loadEditor(instance, editorParams);\n                return true;\n            } else {\n                return false;\n            }\n        } catch (e) {\n            return false;\n        }\n    },\n\n    _loadEditor: function(instance, editorParams) {\n        if (!window['_mpEditorLoaded']) { // only load the codeless event editor once, even if there are multiple instances of PostHogLib\n            window['_mpEditorLoaded'] = true;\n            var editorUrl = instance.get_config('app_host')\n              + '/static/editor.js?_ts='\n              + (new Date()).getTime();\n            this._loadScript(editorUrl, function() {\n                window['ph_load_editor'](editorParams);\n            });\n            return true;\n        }\n        return false;\n    },\n\n    // this is a mechanism to ramp up CE with no server-side interaction.\n    // when CE is active, every page load results in a decide request. we\n    // need to gently ramp this up so we don't overload decide. this decides\n    // deterministically if CE is enabled for this project by modding the char\n    // value of the project token.\n    enabledForProject: function(token, numBuckets, numEnabledBuckets) {\n        numBuckets = !_.isUndefined(numBuckets) ? numBuckets : 10;\n        numEnabledBuckets = !_.isUndefined(numEnabledBuckets) ? numEnabledBuckets : 10;\n        var charCodeSum = 0;\n        for (var i = 0; i < token.length; i++) {\n            charCodeSum += token.charCodeAt(i);\n        }\n        return (charCodeSum % numBuckets) < numEnabledBuckets;\n    },\n\n    isBrowserSupported: function() {\n        return _.isFunction(document.querySelectorAll);\n    }\n};\n\n_.bind_instance_methods(autocapture);\n_.safewrap_instance_methods(autocapture);\n\nexport { autocapture };\n","/* eslint camelcase: \"off\" */\n\nimport { _, console } from './utils';\n\n/**\n * DomCapture Object\n * @constructor\n */\nvar DomCapture = function() {};\n\n\n// interface\nDomCapture.prototype.create_properties = function() {};\nDomCapture.prototype.event_handler = function() {};\nDomCapture.prototype.after_capture_handler = function() {};\n\nDomCapture.prototype.init = function(posthog_instance) {\n    this.mp = posthog_instance;\n    return this;\n};\n\n/**\n * @param {Object|string} query\n * @param {string} event_name\n * @param {Object=} properties\n * @param {function=} user_callback\n */\nDomCapture.prototype.capture = function(query, event_name, properties, user_callback) {\n    var that = this;\n    var elements = _.dom_query(query);\n\n    if (elements.length === 0) {\n        console.error('The DOM query (' + query + ') returned 0 elements');\n        return;\n    }\n\n    _.each(elements, function(element) {\n        _.register_event(element, this.override_event, function(e) {\n            var options = {};\n            var props = that.create_properties(properties, this);\n            var timeout = that.mp.get_config('capture_links_timeout');\n\n            that.event_handler(e, this, options);\n\n            // in case the posthog servers don't get back to us in time\n            window.setTimeout(that.capture_callback(user_callback, props, options, true), timeout);\n\n            // fire the captureing event\n            that.mp.capture(event_name, props, that.capture_callback(user_callback, props, options));\n        });\n    }, this);\n\n    return true;\n};\n\n/**\n * @param {function} user_callback\n * @param {Object} props\n * @param {boolean=} timeout_occured\n */\nDomCapture.prototype.capture_callback = function(user_callback, props, options, timeout_occured) {\n    timeout_occured = timeout_occured || false;\n    var that = this;\n\n    return function() {\n        // options is referenced from both callbacks, so we can have\n        // a 'lock' of sorts to ensure only one fires\n        if (options.callback_fired) { return; }\n        options.callback_fired = true;\n\n        if (user_callback && user_callback(timeout_occured, props) === false) {\n            // user can prevent the default functionality by\n            // returning false from their callback\n            return;\n        }\n\n        that.after_capture_handler(props, options, timeout_occured);\n    };\n};\n\nDomCapture.prototype.create_properties = function(properties, element) {\n    var props;\n\n    if (typeof(properties) === 'function') {\n        props = properties(element);\n    } else {\n        props = _.extend({}, properties);\n    }\n\n    return props;\n};\n\n/**\n * LinkCapture Object\n * @constructor\n * @extends DomCapture\n */\nvar LinkCapture = function() {\n    this.override_event = 'click';\n};\n_.inherit(LinkCapture, DomCapture);\n\nLinkCapture.prototype.create_properties = function(properties, element) {\n    var props = LinkCapture.superclass.create_properties.apply(this, arguments);\n\n    if (element.href) { props['url'] = element.href; }\n\n    return props;\n};\n\nLinkCapture.prototype.event_handler = function(evt, element, options) {\n    options.new_tab = (\n        evt.which === 2 ||\n        evt.metaKey ||\n        evt.ctrlKey ||\n        element.target === '_blank'\n    );\n    options.href = element.href;\n\n    if (!options.new_tab) {\n        evt.preventDefault();\n    }\n};\n\nLinkCapture.prototype.after_capture_handler = function(props, options) {\n    if (options.new_tab) { return; }\n\n    setTimeout(function() {\n        window.location = options.href;\n    }, 0);\n};\n\n/**\n * FormCapture Object\n * @constructor\n * @extends DomCapture\n */\nvar FormCapture = function() {\n    this.override_event = 'submit';\n};\n_.inherit(FormCapture, DomCapture);\n\nFormCapture.prototype.event_handler = function(evt, element, options) {\n    options.element = element;\n    evt.preventDefault();\n};\n\nFormCapture.prototype.after_capture_handler = function(props, options) {\n    setTimeout(function() {\n        options.element.submit();\n    }, 0);\n};\n\n\nexport {\n    FormCapture,\n    LinkCapture\n};\n","/**\n * GDPR utils\n *\n * The General Data Protection Regulation (GDPR) is a regulation in EU law on data protection\n * and privacy for all individuals within the European Union. It addresses the export of personal\n * data outside the EU. The GDPR aims primarily to give control back to citizens and residents\n * over their personal data and to simplify the regulatory environment for international business\n * by unifying the regulation within the EU.\n *\n * This set of utilities is intended to enable opt in/out functionality in the PostHog JS SDK.\n * These functions are used internally by the SDK and are not intended to be publicly exposed.\n */\n\nimport { _, window } from './utils';\n\n/**\n * A function used to capture a PostHog event (e.g. PostHogLib.capture)\n * @callback captureFunction\n * @param {String} event_name The name of the event. This can be anything the user does - 'Button Click', 'Sign Up', 'Item Purchased', etc.\n * @param {Object} [properties] A set of properties to include with the event you're sending. These describe the user who did the event or details about the event itself.\n * @param {Function} [callback] If provided, the callback function will be called after captureing the event.\n */\n\n/** Public **/\n\nvar GDPR_DEFAULT_PERSISTENCE_PREFIX = '__ph_opt_in_out_';\n\n/**\n * Opt the user in to data captureing and cookies/localstorage for the given token\n * @param {string} token - PostHog project captureing token\n * @param {Object} [options]\n * @param {captureFunction} [options.capture] - function used for captureing a PostHog event to record the opt-in action\n * @param {string} [options.captureEventName] - event name to be used for captureing the opt-in action\n * @param {Object} [options.captureProperties] - set of properties to be captureed along with the opt-in action\n * @param {string} [options.persistenceType] Persistence mechanism used - cookie or localStorage\n * @param {string} [options.persistencePrefix=__ph_opt_in_out] - custom prefix to be used in the cookie/localstorage name\n * @param {Number} [options.cookieExpiration] - number of days until the opt-in cookie expires\n * @param {boolean} [options.crossSubdomainCookie] - whether the opt-in cookie is set as cross-subdomain or not\n * @param {boolean} [options.secureCookie] - whether the opt-in cookie is set as secure or not\n */\nexport function optIn(token, options) {\n    _optInOut(true, token, options);\n}\n\n/**\n * Opt the user out of data captureing and cookies/localstorage for the given token\n * @param {string} token - PostHog project captureing token\n * @param {Object} [options]\n * @param {string} [options.persistenceType] Persistence mechanism used - cookie or localStorage\n * @param {string} [options.persistencePrefix=__ph_opt_in_out] - custom prefix to be used in the cookie/localstorage name\n * @param {Number} [options.cookieExpiration] - number of days until the opt-out cookie expires\n * @param {boolean} [options.crossSubdomainCookie] - whether the opt-out cookie is set as cross-subdomain or not\n * @param {boolean} [options.secureCookie] - whether the opt-out cookie is set as secure or not\n */\nexport function optOut(token, options) {\n    _optInOut(false, token, options);\n}\n\n/**\n * Check whether the user has opted in to data captureing and cookies/localstorage for the given token\n * @param {string} token - PostHog project captureing token\n * @param {Object} [options]\n * @param {string} [options.persistenceType] Persistence mechanism used - cookie or localStorage\n * @param {string} [options.persistencePrefix=__ph_opt_in_out] - custom prefix to be used in the cookie/localstorage name\n * @returns {boolean} whether the user has opted in to the given opt type\n */\nexport function hasOptedIn(token, options) {\n    return _getStorageValue(token, options) === '1';\n}\n\n/**\n * Check whether the user has opted out of data captureing and cookies/localstorage for the given token\n * @param {string} token - PostHog project captureing token\n * @param {Object} [options]\n * @param {string} [options.persistenceType] Persistence mechanism used - cookie or localStorage\n * @param {string} [options.persistencePrefix=__ph_opt_in_out] - custom prefix to be used in the cookie/localstorage name\n * @returns {boolean} whether the user has opted out of the given opt type\n */\nexport function hasOptedOut(token, options) {\n    if (_hasDoNotCaptureFlagOn(options)) {\n        return true;\n    }\n    return _getStorageValue(token, options) === '0';\n}\n\n/**\n * Wrap a PostHogLib method with a check for whether the user is opted out of data captureing and cookies/localstorage for the given token\n * If the user has opted out, return early instead of executing the method.\n * If a callback argument was provided, execute it passing the 0 error code.\n * @param {function} method - wrapped method to be executed if the user has not opted out\n * @returns {*} the result of executing method OR undefined if the user has opted out\n */\nexport function addOptOutCheckPostHogLib(method) {\n    return _addOptOutCheck(method, function(name) {\n        return this.get_config(name);\n    });\n}\n\n/**\n * Wrap a PostHogPeople method with a check for whether the user is opted out of data captureing and cookies/localstorage for the given token\n * If the user has opted out, return early instead of executing the method.\n * If a callback argument was provided, execute it passing the 0 error code.\n * @param {function} method - wrapped method to be executed if the user has not opted out\n * @returns {*} the result of executing method OR undefined if the user has opted out\n */\nexport function addOptOutCheckPostHogPeople(method) {\n    return _addOptOutCheck(method, function(name) {\n        return this._get_config(name);\n    });\n}\n\n/**\n * Wrap a PostHogGroup method with a check for whether the user is opted out of data captureing and cookies/localstorage for the given token\n * If the user has opted out, return early instead of executing the method.\n * If a callback argument was provided, execute it passing the 0 error code.\n * @param {function} method - wrapped method to be executed if the user has not opted out\n * @returns {*} the result of executing method OR undefined if the user has opted out\n */\nexport function addOptOutCheckPostHogGroup(method) {\n    return _addOptOutCheck(method, function(name) {\n        return this._get_config(name);\n    });\n}\n\n/**\n * Clear the user's opt in/out status of data captureing and cookies/localstorage for the given token\n * @param {string} token - PostHog project captureing token\n * @param {Object} [options]\n * @param {string} [options.persistenceType] Persistence mechanism used - cookie or localStorage\n * @param {string} [options.persistencePrefix=__ph_opt_in_out] - custom prefix to be used in the cookie/localstorage name\n * @param {Number} [options.cookieExpiration] - number of days until the opt-in cookie expires\n * @param {boolean} [options.crossSubdomainCookie] - whether the opt-in cookie is set as cross-subdomain or not\n * @param {boolean} [options.secureCookie] - whether the opt-in cookie is set as secure or not\n */\nexport function clearOptInOut(token, options) {\n    options = options || {};\n    _getStorage(options).remove(_getStorageKey(token, options), !!options.crossSubdomainCookie);\n}\n\n/** Private **/\n\n/**\n * Get storage util\n * @param {Object} [options]\n * @param {string} [options.persistenceType]\n * @returns {object} either _.cookie or _.localstorage\n */\nfunction _getStorage(options) {\n    options = options || {};\n    return options.persistenceType === 'localStorage' ? _.localStorage : _.cookie;\n}\n\n/**\n * Get the name of the cookie that is used for the given opt type (captureing, cookie, etc.)\n * @param {string} token - PostHog project captureing token\n * @param {Object} [options]\n * @param {string} [options.persistencePrefix=__ph_opt_in_out] - custom prefix to be used in the cookie/localstorage name\n * @returns {string} the name of the cookie for the given opt type\n */\nfunction _getStorageKey(token, options) {\n    options = options || {};\n    return (options.persistencePrefix || GDPR_DEFAULT_PERSISTENCE_PREFIX) + token;\n}\n\n/**\n * Get the value of the cookie that is used for the given opt type (captureing, cookie, etc.)\n * @param {string} token - PostHog project captureing token\n * @param {Object} [options]\n * @param {string} [options.persistencePrefix=__ph_opt_in_out] - custom prefix to be used in the cookie/localstorage name\n * @returns {string} the value of the cookie for the given opt type\n */\nfunction _getStorageValue(token, options) {\n    return _getStorage(options).get(_getStorageKey(token, options));\n}\n\n/**\n * Check whether the user has set the DNT/doNotCapture setting to true in their browser\n * @param {Object} [options]\n * @param {string} [options.window] - alternate window object to check; used to force various DNT settings in browser tests\n * @returns {boolean} whether the DNT setting is true\n */\nfunction _hasDoNotCaptureFlagOn(options) {\n    var win = (options && options.window) || window;\n    var nav = win['navigator'] || {};\n    var hasDntOn = false;\n\n    _.each([\n        nav['doNotCapture'], // standard\n        nav['msDoNotCapture'],\n        win['doNotCapture']\n    ], function(dntValue) {\n        if (_.includes([true, 1, '1', 'yes'], dntValue)) {\n            hasDntOn = true;\n        }\n    });\n\n    return hasDntOn;\n}\n\n/**\n * Set cookie/localstorage for the user indicating that they are opted in or out for the given opt type\n * @param {boolean} optValue - whether to opt the user in or out for the given opt type\n * @param {string} token - PostHog project captureing token\n * @param {Object} [options]\n * @param {captureFunction} [options.capture] - function used for captureing a PostHog event to record the opt-in action\n * @param {string} [options.captureEventName] - event name to be used for captureing the opt-in action\n * @param {Object} [options.captureProperties] - set of properties to be captureed along with the opt-in action\n * @param {string} [options.persistencePrefix=__ph_opt_in_out] - custom prefix to be used in the cookie/localstorage name\n * @param {Number} [options.cookieExpiration] - number of days until the opt-in cookie expires\n * @param {boolean} [options.crossSubdomainCookie] - whether the opt-in cookie is set as cross-subdomain or not\n * @param {boolean} [options.secureCookie] - whether the opt-in cookie is set as secure or not\n */\nfunction _optInOut(optValue, token, options) {\n    if (!_.isString(token) || !token.length) {\n        console.error('gdpr.' + (optValue ? 'optIn' : 'optOut') + ' called with an invalid token');\n        return;\n    }\n\n    options = options || {};\n\n    _getStorage(options).set(\n        _getStorageKey(token, options),\n        optValue ? 1 : 0,\n        _.isNumber(options.cookieExpiration) ? options.cookieExpiration : null,\n        !!options.crossSubdomainCookie,\n        !!options.secureCookie\n    );\n\n    if (options.capture && optValue) { // only capture event if opting in (optValue=true)\n        options.capture(options.captureEventName || '$opt_in', options.captureProperties);\n    }\n}\n\n/**\n * Wrap a method with a check for whether the user is opted out of data captureing and cookies/localstorage for the given token\n * If the user has opted out, return early instead of executing the method.\n * If a callback argument was provided, execute it passing the 0 error code.\n * @param {function} method - wrapped method to be executed if the user has not opted out\n * @param {function} getConfigValue - getter function for the PostHog API token and other options to be used with opt-out check\n * @returns {*} the result of executing method OR undefined if the user has opted out\n */\nfunction _addOptOutCheck(method, getConfigValue) {\n    return function() {\n        var optedOut = false;\n\n        try {\n            var token = getConfigValue.call(this, 'token');\n            var persistenceType = getConfigValue.call(this, 'opt_out_captureing_persistence_type');\n            var persistencePrefix = getConfigValue.call(this, 'opt_out_captureing_cookie_prefix');\n            var win = getConfigValue.call(this, 'window'); // used to override window during browser tests\n\n            if (token) { // if there was an issue getting the token, continue method execution as normal\n                optedOut = hasOptedOut(token, {\n                    persistenceType: persistenceType,\n                    persistencePrefix: persistencePrefix,\n                    window: win\n                });\n            }\n        } catch(err) {\n            console.error('Unexpected error when checking captureing opt-out status: ' + err);\n        }\n\n        if (!optedOut) {\n            return method.apply(this, arguments);\n        }\n\n        var callback = arguments[arguments.length - 1];\n        if (typeof(callback) === 'function') {\n            callback(0);\n        }\n\n        return;\n    };\n}\n","/* eslint camelcase: \"off\" */\n\nimport { _ } from './utils';\n\n/** @const */ var SET_ACTION      = '$set';\n/** @const */ var SET_ONCE_ACTION = '$set_once';\n/** @const */ var UNSET_ACTION    = '$unset';\n/** @const */ var ADD_ACTION      = '$add';\n/** @const */ var APPEND_ACTION   = '$append';\n/** @const */ var UNION_ACTION    = '$union';\n/** @const */ var REMOVE_ACTION   = '$remove';\n/** @const */ var DELETE_ACTION   = '$delete';\n\n// Common internal methods for posthog.people and posthog.group APIs.\n// These methods shouldn't involve network I/O.\nvar apiActions = {\n    set_action: function(prop, to) {\n        var data = {};\n        var $set = {};\n        if (_.isObject(prop)) {\n            _.each(prop, function(v, k) {\n                if (!this._is_reserved_property(k)) {\n                    $set[k] = v;\n                }\n            }, this);\n        } else {\n            $set[prop] = to;\n        }\n\n        data[SET_ACTION] = $set;\n        return data;\n    },\n\n    unset_action: function(prop) {\n        var data = {};\n        var $unset = [];\n        if (!_.isArray(prop)) {\n            prop = [prop];\n        }\n\n        _.each(prop, function(k) {\n            if (!this._is_reserved_property(k)) {\n                $unset.push(k);\n            }\n        }, this);\n\n        data[UNSET_ACTION] = $unset;\n        return data;\n    },\n\n    set_once_action: function(prop, to) {\n        var data = {};\n        var $set_once = {};\n        if (_.isObject(prop)) {\n            _.each(prop, function(v, k) {\n                if (!this._is_reserved_property(k)) {\n                    $set_once[k] = v;\n                }\n            }, this);\n        } else {\n            $set_once[prop] = to;\n        }\n        data[SET_ONCE_ACTION] = $set_once;\n        return data;\n    },\n\n    union_action: function(list_name, values) {\n        var data = {};\n        var $union = {};\n        if (_.isObject(list_name)) {\n            _.each(list_name, function(v, k) {\n                if (!this._is_reserved_property(k)) {\n                    $union[k] = _.isArray(v) ? v : [v];\n                }\n            }, this);\n        } else {\n            $union[list_name] = _.isArray(values) ? values : [values];\n        }\n        data[UNION_ACTION] = $union;\n        return data;\n    },\n\n    append_action: function(list_name, value) {\n        var data = {};\n        var $append = {};\n        if (_.isObject(list_name)) {\n            _.each(list_name, function(v, k) {\n                if (!this._is_reserved_property(k)) {\n                    $append[k] = v;\n                }\n            }, this);\n        } else {\n            $append[list_name] = value;\n        }\n        data[APPEND_ACTION] = $append;\n        return data;\n    },\n\n    remove_action: function(list_name, value) {\n        var data = {};\n        var $remove = {};\n        if (_.isObject(list_name)) {\n            _.each(list_name, function(v, k) {\n                if (!this._is_reserved_property(k)) {\n                    $remove[k] = v;\n                }\n            }, this);\n        } else {\n            $remove[list_name] = value;\n        }\n        data[REMOVE_ACTION] = $remove;\n        return data;\n    },\n\n    delete_action: function() {\n        var data = {};\n        data[DELETE_ACTION] = '';\n        return data;\n    }\n};\n\nexport {\n    SET_ACTION,\n    SET_ONCE_ACTION,\n    UNSET_ACTION,\n    ADD_ACTION,\n    APPEND_ACTION,\n    UNION_ACTION,\n    REMOVE_ACTION,\n    DELETE_ACTION,\n    apiActions\n};\n","/* eslint camelcase: \"off\" */\nimport { addOptOutCheckPostHogGroup } from './gdpr-utils';\nimport { apiActions } from './api-actions';\nimport { _, console } from './utils';\n\n/**\n * PostHog Group Object\n * @constructor\n */\nvar PostHogGroup = function() {};\n\n_.extend(PostHogGroup.prototype, apiActions);\n\nPostHogGroup.prototype._init = function(posthog_instance, group_key, group_id) {\n    this._posthog = posthog_instance;\n    this._group_key = group_key;\n    this._group_id = group_id;\n};\n\n/**\n * Set properties on a group.\n *\n * ### Usage:\n *\n *     posthog.get_group('company', 'posthog').set('Location', '405 Howard');\n *\n *     // or set multiple properties at once\n *     posthog.get_group('company', 'posthog').set({\n *          'Location': '405 Howard',\n *          'Founded' : 2009,\n *     });\n *     // properties can be strings, integers, dates, or lists\n *\n * @param {Object|String} prop If a string, this is the name of the property. If an object, this is an associative array of names and values.\n * @param {*} [to] A value to set on the given property name\n * @param {Function} [callback] If provided, the callback will be called after the captureing event\n */\nPostHogGroup.prototype.set = addOptOutCheckPostHogGroup(function(prop, to, callback) {\n    var data = this.set_action(prop, to);\n    if (_.isObject(prop)) {\n        callback = to;\n    }\n    return this._send_request(data, callback);\n});\n\n/**\n * Set properties on a group, only if they do not yet exist.\n * This will not overwrite previous group property values, unlike\n * group.set().\n *\n * ### Usage:\n *\n *     posthog.get_group('company', 'posthog').set_once('Location', '405 Howard');\n *\n *     // or set multiple properties at once\n *     posthog.get_group('company', 'posthog').set_once({\n *          'Location': '405 Howard',\n *          'Founded' : 2009,\n *     });\n *     // properties can be strings, integers, lists or dates\n *\n * @param {Object|String} prop If a string, this is the name of the property. If an object, this is an associative array of names and values.\n * @param {*} [to] A value to set on the given property name\n * @param {Function} [callback] If provided, the callback will be called after the captureing event\n */\nPostHogGroup.prototype.set_once = addOptOutCheckPostHogGroup(function(prop, to, callback) {\n    var data = this.set_once_action(prop, to);\n    if (_.isObject(prop)) {\n        callback = to;\n    }\n    return this._send_request(data, callback);\n});\n\n/**\n * Unset properties on a group permanently.\n *\n * ### Usage:\n *\n *     posthog.get_group('company', 'posthog').unset('Founded');\n *\n * @param {String} prop The name of the property.\n * @param {Function} [callback] If provided, the callback will be called after the captureing event\n */\nPostHogGroup.prototype.unset = addOptOutCheckPostHogGroup(function(prop, callback) {\n    var data = this.unset_action(prop);\n    return this._send_request(data, callback);\n});\n\n/**\n * Merge a given list with a list-valued group property, excluding duplicate values.\n *\n * ### Usage:\n *\n *     // merge a value to a list, creating it if needed\n *     posthog.get_group('company', 'posthog').union('Location', ['San Francisco', 'London']);\n *\n * @param {String} list_name Name of the property.\n * @param {Array} values Values to merge with the given property\n * @param {Function} [callback] If provided, the callback will be called after the captureing event\n */\nPostHogGroup.prototype.union = addOptOutCheckPostHogGroup(function(list_name, values, callback) {\n    if (_.isObject(list_name)) {\n        callback = values;\n    }\n    var data = this.union_action(list_name, values);\n    return this._send_request(data, callback);\n});\n\n/**\n * Permanently delete a group.\n *\n * ### Usage:\n *     posthog.get_group('company', 'posthog').delete();\n */\nPostHogGroup.prototype['delete'] = addOptOutCheckPostHogGroup(function(callback) {\n    var data = this.delete_action();\n    return this._send_request(data, callback);\n});\n\n/**\n * Remove a property from a group. The value will be ignored if doesn't exist.\n *\n * ### Usage:\n *\n *     posthog.get_group('company', 'posthog').remove('Location', 'London');\n *\n * @param {String} list_name Name of the property.\n * @param {Object} value Value to remove from the given group property\n * @param {Function} [callback] If provided, the callback will be called after the captureing event\n */\nPostHogGroup.prototype.remove = addOptOutCheckPostHogGroup(function(list_name, value, callback) {\n    var data = this.remove_action(list_name, value);\n    return this._send_request(data, callback);\n});\n\nPostHogGroup.prototype._send_request = function(data, callback) {\n    data['$group_key'] = this._group_key;\n    data['$group_id'] = this._group_id;\n    data['$token'] = this._get_config('token');\n\n    var date_encoded_data = _.encodeDates(data);\n    var truncated_data    = _.truncate(date_encoded_data, 255);\n    var json_data         = _.JSONEncode(date_encoded_data);\n    var encoded_data      = _.base64Encode(json_data);\n\n    console.log(data);\n    this._posthog._send_request(\n        this._posthog.get_config('api_host') + '/groups/',\n        {'data': encoded_data},\n        this._posthog._prepare_callback(callback, truncated_data)\n    );\n\n    return truncated_data;\n};\n\nPostHogGroup.prototype._is_reserved_property = function(prop) {\n    return prop === '$group_key' || prop === '$group_id';\n};\n\nPostHogGroup.prototype._get_config = function(conf) {\n    return this._posthog.get_config(conf);\n};\n\nPostHogGroup.prototype.toString = function() {\n    return this._posthog.toString() + '.group.' + this._group_key + '.' + this._group_id;\n};\n\n// PostHogGroup Exports\nPostHogGroup.prototype['remove']   = PostHogGroup.prototype.remove;\nPostHogGroup.prototype['set']      = PostHogGroup.prototype.set;\nPostHogGroup.prototype['set_once'] = PostHogGroup.prototype.set_once;\nPostHogGroup.prototype['union']    = PostHogGroup.prototype.union;\nPostHogGroup.prototype['unset']    = PostHogGroup.prototype.unset;\nPostHogGroup.prototype['toString'] = PostHogGroup.prototype.toString;\n\nexport {PostHogGroup};\n","/* eslint camelcase: \"off\" */\nimport { addOptOutCheckPostHogPeople } from './gdpr-utils';\nimport {\n    SET_ACTION,\n    SET_ONCE_ACTION,\n    UNSET_ACTION,\n    ADD_ACTION,\n    APPEND_ACTION,\n    REMOVE_ACTION,\n    UNION_ACTION,\n    apiActions\n} from './api-actions';\nimport { _, console } from './utils';\n\n/**\n * PostHog People Object\n * @constructor\n */\nvar PostHogPeople = function() {};\n\n_.extend(PostHogPeople.prototype, apiActions);\n\nPostHogPeople.prototype._init = function(posthog_instance) {\n    this._posthog = posthog_instance;\n};\n\n/*\n* Set properties on a user record.\n*\n* ### Usage:\n*\n*     posthog.people.set('gender', 'm');\n*\n*     // or set multiple properties at once\n*     posthog.people.set({\n*         'Company': 'Acme',\n*         'Plan': 'Premium',\n*         'Upgrade date': new Date()\n*     });\n*     // properties can be strings, integers, dates, or lists\n*\n* @param {Object|String} prop If a string, this is the name of the property. If an object, this is an associative array of names and values.\n* @param {*} [to] A value to set on the given property name\n* @param {Function} [callback] If provided, the callback will be called after captureing the event.\n*/\nPostHogPeople.prototype.set = addOptOutCheckPostHogPeople(function(prop, to, callback) {\n    var data = this.set_action(prop, to);\n    if (_.isObject(prop)) {\n        callback = to;\n    }\n    // make sure that the referrer info has been updated and saved\n    if (this._get_config('save_referrer')) {\n        this._posthog['persistence'].update_referrer_info(document.referrer);\n    }\n\n    // update $set object with default people properties\n    data[SET_ACTION] = _.extend(\n        {},\n        _.info.people_properties(),\n        this._posthog['persistence'].get_referrer_info(),\n        data[SET_ACTION]\n    );\n    return this._send_request(data, callback);\n});\n\n/*\n* Set properties on a user record, only if they do not yet exist.\n* This will not overwrite previous people property values, unlike\n* people.set().\n*\n* ### Usage:\n*\n*     posthog.people.set_once('First Login Date', new Date());\n*\n*     // or set multiple properties at once\n*     posthog.people.set_once({\n*         'First Login Date': new Date(),\n*         'Starting Plan': 'Premium'\n*     });\n*\n*     // properties can be strings, integers or dates\n*\n* @param {Object|String} prop If a string, this is the name of the property. If an object, this is an associative array of names and values.\n* @param {*} [to] A value to set on the given property name\n* @param {Function} [callback] If provided, the callback will be called after captureing the event.\n*/\nPostHogPeople.prototype.set_once = addOptOutCheckPostHogPeople(function(prop, to, callback) {\n    var data = this.set_once_action(prop, to);\n    if (_.isObject(prop)) {\n        callback = to;\n    }\n    return this._send_request(data, callback);\n});\n\n/*\n* Unset properties on a user record (permanently removes the properties and their values from a profile).\n*\n* ### Usage:\n*\n*     posthog.people.unset('gender');\n*\n*     // or unset multiple properties at once\n*     posthog.people.unset(['gender', 'Company']);\n*\n* @param {Array|String} prop If a string, this is the name of the property. If an array, this is a list of property names.\n* @param {Function} [callback] If provided, the callback will be called after captureing the event.\n*/\nPostHogPeople.prototype.unset = addOptOutCheckPostHogPeople(function(prop, callback) {\n    var data = this.unset_action(prop);\n    return this._send_request(data, callback);\n});\n\n/*\n* Increment/decrement numeric people analytics properties.\n*\n* ### Usage:\n*\n*     posthog.people.increment('page_views', 1);\n*\n*     // or, for convenience, if you're just incrementing a counter by\n*     // 1, you can simply do\n*     posthog.people.increment('page_views');\n*\n*     // to decrement a counter, pass a negative number\n*     posthog.people.increment('credits_left', -1);\n*\n*     // like posthog.people.set(), you can increment multiple\n*     // properties at once:\n*     posthog.people.increment({\n*         counter1: 1,\n*         counter2: 6\n*     });\n*\n* @param {Object|String} prop If a string, this is the name of the property. If an object, this is an associative array of names and numeric values.\n* @param {Number} [by] An amount to increment the given property\n* @param {Function} [callback] If provided, the callback will be called after captureing the event.\n*/\nPostHogPeople.prototype.increment = addOptOutCheckPostHogPeople(function(prop, by, callback) {\n    var data = {};\n    var $add = {};\n    if (_.isObject(prop)) {\n        _.each(prop, function(v, k) {\n            if (!this._is_reserved_property(k)) {\n                if (isNaN(parseFloat(v))) {\n                    console.error('Invalid increment value passed to posthog.people.increment - must be a number');\n                    return;\n                } else {\n                    $add[k] = v;\n                }\n            }\n        }, this);\n        callback = by;\n    } else {\n        // convenience: posthog.people.increment('property'); will\n        // increment 'property' by 1\n        if (_.isUndefined(by)) {\n            by = 1;\n        }\n        $add[prop] = by;\n    }\n    data[ADD_ACTION] = $add;\n\n    return this._send_request(data, callback);\n});\n\n/*\n* Append a value to a list-valued people analytics property.\n*\n* ### Usage:\n*\n*     // append a value to a list, creating it if needed\n*     posthog.people.append('pages_visited', 'homepage');\n*\n*     // like posthog.people.set(), you can append multiple\n*     // properties at once:\n*     posthog.people.append({\n*         list1: 'bob',\n*         list2: 123\n*     });\n*\n* @param {Object|String} list_name If a string, this is the name of the property. If an object, this is an associative array of names and values.\n* @param {*} [value] value An item to append to the list\n* @param {Function} [callback] If provided, the callback will be called after captureing the event.\n*/\nPostHogPeople.prototype.append = addOptOutCheckPostHogPeople(function(list_name, value, callback) {\n    if (_.isObject(list_name)) {\n        callback = value;\n    }\n    var data = this.append_action(list_name, value);\n    return this._send_request(data, callback);\n});\n\n/*\n* Remove a value from a list-valued people analytics property.\n*\n* ### Usage:\n*\n*     posthog.people.remove('School', 'UCB');\n*\n* @param {Object|String} list_name If a string, this is the name of the property. If an object, this is an associative array of names and values.\n* @param {*} [value] value Item to remove from the list\n* @param {Function} [callback] If provided, the callback will be called after captureing the event.\n*/\nPostHogPeople.prototype.remove = addOptOutCheckPostHogPeople(function(list_name, value, callback) {\n    if (_.isObject(list_name)) {\n        callback = value;\n    }\n    var data = this.remove_action(list_name, value);\n    return this._send_request(data, callback);\n});\n\n/*\n* Merge a given list with a list-valued people analytics property,\n* excluding duplicate values.\n*\n* ### Usage:\n*\n*     // merge a value to a list, creating it if needed\n*     posthog.people.union('pages_visited', 'homepage');\n*\n*     // like posthog.people.set(), you can append multiple\n*     // properties at once:\n*     posthog.people.union({\n*         list1: 'bob',\n*         list2: 123\n*     });\n*\n*     // like posthog.people.append(), you can append multiple\n*     // values to the same list:\n*     posthog.people.union({\n*         list1: ['bob', 'billy']\n*     });\n*\n* @param {Object|String} list_name If a string, this is the name of the property. If an object, this is an associative array of names and values.\n* @param {*} [value] Value / values to merge with the given property\n* @param {Function} [callback] If provided, the callback will be called after captureing the event.\n*/\nPostHogPeople.prototype.union = addOptOutCheckPostHogPeople(function(list_name, values, callback) {\n    if (_.isObject(list_name)) {\n        callback = values;\n    }\n    var data = this.union_action(list_name, values);\n    return this._send_request(data, callback);\n});\n\n/*\n* Record that you have charged the current user a certain amount\n* of money. Charges recorded with capture_charge() will appear in the\n* PostHog revenue report.\n*\n* ### Usage:\n*\n*     // charge a user $50\n*     posthog.people.capture_charge(50);\n*\n*     // charge a user $30.50 on the 2nd of january\n*     posthog.people.capture_charge(30.50, {\n*         '$time': new Date('jan 1 2012')\n*     });\n*\n* @param {Number} amount The amount of money charged to the current user\n* @param {Object} [properties] An associative array of properties associated with the charge\n* @param {Function} [callback] If provided, the callback will be called when the server responds\n*/\nPostHogPeople.prototype.capture_charge = addOptOutCheckPostHogPeople(function(amount, properties, callback) {\n    if (!_.isNumber(amount)) {\n        amount = parseFloat(amount);\n        if (isNaN(amount)) {\n            console.error('Invalid value passed to posthog.people.capture_charge - must be a number');\n            return;\n        }\n    }\n\n    return this.append('$transactions', _.extend({\n        '$amount': amount\n    }, properties), callback);\n});\n\n/*\n* Permanently clear all revenue report transactions from the\n* current user's people analytics profile.\n*\n* ### Usage:\n*\n*     posthog.people.clear_charges();\n*\n* @param {Function} [callback] If provided, the callback will be called after captureing the event.\n*/\nPostHogPeople.prototype.clear_charges = function(callback) {\n    return this.set('$transactions', [], callback);\n};\n\n/*\n* Permanently deletes the current people analytics profile from\n* PostHog (using the current distinct_id).\n*\n* ### Usage:\n*\n*     // remove the all data you have stored about the current user\n*     posthog.people.delete_user();\n*\n*/\nPostHogPeople.prototype.delete_user = function() {\n    if (!this._identify_called()) {\n        console.error('posthog.people.delete_user() requires you to call identify() first');\n        return;\n    }\n    var data = {'$delete': this._posthog.get_distinct_id()};\n    return this._send_request(data);\n};\n\nPostHogPeople.prototype.toString = function() {\n    return this._posthog.toString() + '.people';\n};\n\nPostHogPeople.prototype._send_request = function(data, callback) {\n    data['$token'] = this._get_config('token');\n    data['$distinct_id'] = this._posthog.get_distinct_id();\n    var device_id = this._posthog.get_property('$device_id');\n    var user_id = this._posthog.get_property('$user_id');\n    var had_persisted_distinct_id = this._posthog.get_property('$had_persisted_distinct_id');\n    if (device_id) {\n        data['$device_id'] = device_id;\n    }\n    if (user_id) {\n        data['$user_id'] = user_id;\n    }\n    if (had_persisted_distinct_id) {\n        data['$had_persisted_distinct_id'] = had_persisted_distinct_id;\n    }\n\n    var date_encoded_data = _.encodeDates(data);\n    var truncated_data    = _.truncate(date_encoded_data, 255);\n    var json_data         = _.JSONEncode(date_encoded_data);\n    var encoded_data      = _.base64Encode(json_data);\n\n    if (!this._identify_called()) {\n        this._enqueue(data);\n        if (!_.isUndefined(callback)) {\n            if (this._get_config('verbose')) {\n                callback({status: -1, error: null});\n            } else {\n                callback(-1);\n            }\n        }\n        return truncated_data;\n    }\n\n    console.log('POSTHOG PEOPLE REQUEST:');\n    console.log(truncated_data);\n\n    this._posthog._send_request(\n        this._get_config('api_host') + '/engage/',\n        {'data': encoded_data},\n        this._posthog._prepare_callback(callback, truncated_data)\n    );\n\n    return truncated_data;\n};\n\nPostHogPeople.prototype._get_config = function(conf_var) {\n    return this._posthog.get_config(conf_var);\n};\n\nPostHogPeople.prototype._identify_called = function() {\n    return this._posthog._flags.identify_called === true;\n};\n\n// Queue up engage operations if identify hasn't been called yet.\nPostHogPeople.prototype._enqueue = function(data) {\n    if (SET_ACTION in data) {\n        this._posthog['persistence']._add_to_people_queue(SET_ACTION, data);\n    } else if (SET_ONCE_ACTION in data) {\n        this._posthog['persistence']._add_to_people_queue(SET_ONCE_ACTION, data);\n    } else if (UNSET_ACTION in data) {\n        this._posthog['persistence']._add_to_people_queue(UNSET_ACTION, data);\n    } else if (ADD_ACTION in data) {\n        this._posthog['persistence']._add_to_people_queue(ADD_ACTION, data);\n    } else if (APPEND_ACTION in data) {\n        this._posthog['persistence']._add_to_people_queue(APPEND_ACTION, data);\n    } else if (REMOVE_ACTION in data) {\n        this._posthog['persistence']._add_to_people_queue(REMOVE_ACTION, data);\n    } else if (UNION_ACTION in data) {\n        this._posthog['persistence']._add_to_people_queue(UNION_ACTION, data);\n    } else {\n        console.error('Invalid call to _enqueue():', data);\n    }\n};\n\nPostHogPeople.prototype._flush_one_queue = function(action, action_method, callback, queue_to_params_fn) {\n    var _this = this;\n    var queued_data = _.extend({}, this._posthog['persistence']._get_queue(action));\n    var action_params = queued_data;\n\n    if (!_.isUndefined(queued_data) && _.isObject(queued_data) && !_.isEmptyObject(queued_data)) {\n        _this._posthog['persistence']._pop_from_people_queue(action, queued_data);\n        if (queue_to_params_fn) {\n            action_params = queue_to_params_fn(queued_data);\n        }\n        action_method.call(_this, action_params, function(response, data) {\n            // on bad response, we want to add it back to the queue\n            if (response === 0) {\n                _this._posthog['persistence']._add_to_people_queue(action, queued_data);\n            }\n            if (!_.isUndefined(callback)) {\n                callback(response, data);\n            }\n        });\n    }\n};\n\n// Flush queued engage operations - order does not matter,\n// and there are network level race conditions anyway\nPostHogPeople.prototype._flush = function(\n    _set_callback, _add_callback, _append_callback, _set_once_callback, _union_callback, _unset_callback, _remove_callback\n) {\n    var _this = this;\n    var $append_queue = this._posthog['persistence']._get_queue(APPEND_ACTION);\n    var $remove_queue = this._posthog['persistence']._get_queue(REMOVE_ACTION);\n\n    this._flush_one_queue(SET_ACTION, this.set, _set_callback);\n    this._flush_one_queue(SET_ONCE_ACTION, this.set_once, _set_once_callback);\n    this._flush_one_queue(UNSET_ACTION, this.unset, _unset_callback, function(queue) { return _.keys(queue); });\n    this._flush_one_queue(ADD_ACTION, this.increment, _add_callback);\n    this._flush_one_queue(UNION_ACTION, this.union, _union_callback);\n\n    // we have to fire off each $append individually since there is\n    // no concat method server side\n    if (!_.isUndefined($append_queue) && _.isArray($append_queue) && $append_queue.length) {\n        var $append_item;\n        var append_callback = function(response, data) {\n            if (response === 0) {\n                _this._posthog['persistence']._add_to_people_queue(APPEND_ACTION, $append_item);\n            }\n            if (!_.isUndefined(_append_callback)) {\n                _append_callback(response, data);\n            }\n        };\n        for (var i = $append_queue.length - 1; i >= 0; i--) {\n            $append_item = $append_queue.pop();\n            if (!_.isEmptyObject($append_item)) {\n                _this.append($append_item, append_callback);\n            }\n        }\n        // Save the shortened append queue\n        _this._posthog['persistence'].save();\n    }\n\n    // same for $remove\n    if (!_.isUndefined($remove_queue) && _.isArray($remove_queue) && $remove_queue.length) {\n        var $remove_item;\n        var remove_callback = function(response, data) {\n            if (response === 0) {\n                _this._posthog['persistence']._add_to_people_queue(REMOVE_ACTION, $remove_item);\n            }\n            if (!_.isUndefined(_remove_callback)) {\n                _remove_callback(response, data);\n            }\n        };\n        for (var j = $remove_queue.length - 1; j >= 0; j--) {\n            $remove_item = $remove_queue.pop();\n            if (!_.isEmptyObject($remove_item)) {\n                _this.remove($remove_item, remove_callback);\n            }\n        }\n        _this._posthog['persistence'].save();\n    }\n};\n\nPostHogPeople.prototype._is_reserved_property = function(prop) {\n    return prop === '$distinct_id' || prop === '$token' || prop === '$device_id' || prop === '$user_id' || prop === '$had_persisted_distinct_id';\n};\n\n// PostHogPeople Exports\nPostHogPeople.prototype['set']           = PostHogPeople.prototype.set;\nPostHogPeople.prototype['set_once']      = PostHogPeople.prototype.set_once;\nPostHogPeople.prototype['unset']         = PostHogPeople.prototype.unset;\nPostHogPeople.prototype['increment']     = PostHogPeople.prototype.increment;\nPostHogPeople.prototype['append']        = PostHogPeople.prototype.append;\nPostHogPeople.prototype['remove']        = PostHogPeople.prototype.remove;\nPostHogPeople.prototype['union']         = PostHogPeople.prototype.union;\nPostHogPeople.prototype['capture_charge']  = PostHogPeople.prototype.capture_charge;\nPostHogPeople.prototype['clear_charges'] = PostHogPeople.prototype.clear_charges;\nPostHogPeople.prototype['delete_user']   = PostHogPeople.prototype.delete_user;\nPostHogPeople.prototype['toString']      = PostHogPeople.prototype.toString;\n\nexport { PostHogPeople };\n","/* eslint camelcase: \"off\" */\n\nimport {\n    SET_ACTION,\n    SET_ONCE_ACTION,\n    UNSET_ACTION,\n    ADD_ACTION,\n    APPEND_ACTION,\n    REMOVE_ACTION,\n    UNION_ACTION\n} from './api-actions';\nimport Config from './config';\nimport { _, console } from './utils';\n\n/*\n * Constants\n */\n/** @const */ var SET_QUEUE_KEY          = '__mps';\n/** @const */ var SET_ONCE_QUEUE_KEY     = '__mpso';\n/** @const */ var UNSET_QUEUE_KEY        = '__mpus';\n/** @const */ var ADD_QUEUE_KEY          = '__mpa';\n/** @const */ var APPEND_QUEUE_KEY       = '__mpap';\n/** @const */ var REMOVE_QUEUE_KEY       = '__mpr';\n/** @const */ var UNION_QUEUE_KEY        = '__mpu';\n// This key is deprecated, but we want to check for it to see whether aliasing is allowed.\n/** @const */ var PEOPLE_DISTINCT_ID_KEY = '$people_distinct_id';\n/** @const */ var ALIAS_ID_KEY           = '__alias';\n/** @const */ var CAMPAIGN_IDS_KEY       = '__cmpns';\n/** @const */ var EVENT_TIMERS_KEY       = '__timers';\n/** @const */ var RESERVED_PROPERTIES = [\n    SET_QUEUE_KEY,\n    SET_ONCE_QUEUE_KEY,\n    UNSET_QUEUE_KEY,\n    ADD_QUEUE_KEY,\n    APPEND_QUEUE_KEY,\n    REMOVE_QUEUE_KEY,\n    UNION_QUEUE_KEY,\n    PEOPLE_DISTINCT_ID_KEY,\n    ALIAS_ID_KEY,\n    CAMPAIGN_IDS_KEY,\n    EVENT_TIMERS_KEY\n];\n\n/**\n * PostHog Persistence Object\n * @constructor\n */\nvar PostHogPersistence = function(config) {\n    this['props'] = {};\n    this.campaign_params_saved = false;\n\n    if (config['persistence_name']) {\n        this.name = 'ph_' + config['persistence_name'];\n    } else {\n        this.name = 'ph_' + config['token'] + '_posthog';\n    }\n\n    var storage_type = config['persistence'];\n    if (storage_type !== 'cookie' && storage_type !== 'localStorage') {\n        console.critical('Unknown persistence type ' + storage_type + '; falling back to cookie');\n        storage_type = config['persistence'] = 'cookie';\n    }\n\n    if (storage_type === 'localStorage' && _.localStorage.is_supported()) {\n        this.storage = _.localStorage;\n    } else {\n        this.storage = _.cookie;\n    }\n\n    this.load();\n    this.update_config(config);\n    this.upgrade(config);\n    this.save();\n};\n\nPostHogPersistence.prototype.properties = function() {\n    var p = {};\n    // Filter out reserved properties\n    _.each(this['props'], function(v, k) {\n        if (!_.include(RESERVED_PROPERTIES, k)) {\n            p[k] = v;\n        }\n    });\n    return p;\n};\n\nPostHogPersistence.prototype.load = function() {\n    if (this.disabled) { return; }\n\n    var entry = this.storage.parse(this.name);\n\n    if (entry) {\n        this['props'] = _.extend({}, entry);\n    }\n};\n\nPostHogPersistence.prototype.upgrade = function(config) {\n    var upgrade_from_old_lib = config['upgrade'],\n        old_cookie_name,\n        old_cookie;\n\n    if (upgrade_from_old_lib) {\n        old_cookie_name = 'ph_super_properties';\n        // Case where they had a custom cookie name before.\n        if (typeof(upgrade_from_old_lib) === 'string') {\n            old_cookie_name = upgrade_from_old_lib;\n        }\n\n        old_cookie = this.storage.parse(old_cookie_name);\n\n        // remove the cookie\n        this.storage.remove(old_cookie_name);\n        this.storage.remove(old_cookie_name, true);\n\n        if (old_cookie) {\n            this['props'] = _.extend(\n                this['props'],\n                old_cookie['all'],\n                old_cookie['events']\n            );\n        }\n    }\n\n    if (!config['cookie_name'] && config['name'] !== 'posthog') {\n        // special case to handle people with cookies of the form\n        // ph_TOKEN_INSTANCENAME from the first release of this library\n        old_cookie_name = 'ph_' + config['token'] + '_' + config['name'];\n        old_cookie = this.storage.parse(old_cookie_name);\n\n        if (old_cookie) {\n            this.storage.remove(old_cookie_name);\n            this.storage.remove(old_cookie_name, true);\n\n            // Save the prop values that were in the cookie from before -\n            // this should only happen once as we delete the old one.\n            this.register_once(old_cookie);\n        }\n    }\n\n    if (this.storage === _.localStorage) {\n        old_cookie = _.cookie.parse(this.name);\n\n        _.cookie.remove(this.name);\n        _.cookie.remove(this.name, true);\n\n        if (old_cookie) {\n            this.register_once(old_cookie);\n        }\n    }\n};\n\nPostHogPersistence.prototype.save = function() {\n    if (this.disabled) { return; }\n    this._expire_notification_campaigns();\n    this.storage.set(\n        this.name,\n        _.JSONEncode(this['props']),\n        this.expire_days,\n        this.cross_subdomain,\n        this.secure\n    );\n};\n\nPostHogPersistence.prototype.remove = function() {\n    // remove both domain and subdomain cookies\n    this.storage.remove(this.name, false);\n    this.storage.remove(this.name, true);\n};\n\n// removes the storage entry and deletes all loaded data\n// forced name for tests\nPostHogPersistence.prototype.clear = function() {\n    this.remove();\n    this['props'] = {};\n};\n\n/**\n* @param {Object} props\n* @param {*=} default_value\n* @param {number=} days\n*/\nPostHogPersistence.prototype.register_once = function(props, default_value, days) {\n    if (_.isObject(props)) {\n        if (typeof(default_value) === 'undefined') { default_value = 'None'; }\n        this.expire_days = (typeof(days) === 'undefined') ? this.default_expiry : days;\n\n        _.each(props, function(val, prop) {\n            if (!this['props'].hasOwnProperty(prop) || this['props'][prop] === default_value) {\n                this['props'][prop] = val;\n            }\n        }, this);\n\n        this.save();\n\n        return true;\n    }\n    return false;\n};\n\n/**\n* @param {Object} props\n* @param {number=} days\n*/\nPostHogPersistence.prototype.register = function(props, days) {\n    if (_.isObject(props)) {\n        this.expire_days = (typeof(days) === 'undefined') ? this.default_expiry : days;\n\n        _.extend(this['props'], props);\n\n        this.save();\n\n        return true;\n    }\n    return false;\n};\n\nPostHogPersistence.prototype.unregister = function(prop) {\n    if (prop in this['props']) {\n        delete this['props'][prop];\n        this.save();\n    }\n};\n\nPostHogPersistence.prototype._expire_notification_campaigns = _.safewrap(function() {\n    var campaigns_shown = this['props'][CAMPAIGN_IDS_KEY],\n        EXPIRY_TIME = Config.DEBUG ? 60 * 1000 : 60 * 60 * 1000; // 1 minute (Config.DEBUG) / 1 hour (PDXN)\n    if (!campaigns_shown) {\n        return;\n    }\n    for (var campaign_id in campaigns_shown) {\n        if (1 * new Date() - campaigns_shown[campaign_id] > EXPIRY_TIME) {\n            delete campaigns_shown[campaign_id];\n        }\n    }\n    if (_.isEmptyObject(campaigns_shown)) {\n        delete this['props'][CAMPAIGN_IDS_KEY];\n    }\n});\n\nPostHogPersistence.prototype.update_campaign_params = function() {\n    if (!this.campaign_params_saved) {\n        this.register_once(_.info.campaignParams());\n        this.campaign_params_saved = true;\n    }\n};\n\nPostHogPersistence.prototype.update_search_keyword = function(referrer) {\n    this.register(_.info.searchInfo(referrer));\n};\n\n// EXPORTED METHOD, we test this directly.\nPostHogPersistence.prototype.update_referrer_info = function(referrer) {\n    // If referrer doesn't exist, we want to note the fact that it was type-in traffic.\n    this.register_once({\n        '$initial_referrer': referrer || '$direct',\n        '$initial_referring_domain': _.info.referringDomain(referrer) || '$direct'\n    }, '');\n};\n\nPostHogPersistence.prototype.get_referrer_info = function() {\n    return _.strip_empty_properties({\n        '$initial_referrer': this['props']['$initial_referrer'],\n        '$initial_referring_domain': this['props']['$initial_referring_domain']\n    });\n};\n\n// safely fills the passed in object with stored properties,\n// does not override any properties defined in both\n// returns the passed in object\nPostHogPersistence.prototype.safe_merge = function(props) {\n    _.each(this['props'], function(val, prop) {\n        if (!(prop in props)) {\n            props[prop] = val;\n        }\n    });\n\n    return props;\n};\n\nPostHogPersistence.prototype.update_config = function(config) {\n    this.default_expiry = this.expire_days = config['cookie_expiration'];\n    this.set_disabled(config['disable_persistence']);\n    this.set_cross_subdomain(config['cross_subdomain_cookie']);\n    this.set_secure(config['secure_cookie']);\n};\n\nPostHogPersistence.prototype.set_disabled = function(disabled) {\n    this.disabled = disabled;\n    if (this.disabled) {\n        this.remove();\n    } else {\n        this.save();\n    }\n};\n\nPostHogPersistence.prototype.set_cross_subdomain = function(cross_subdomain) {\n    if (cross_subdomain !== this.cross_subdomain) {\n        this.cross_subdomain = cross_subdomain;\n        this.remove();\n        this.save();\n    }\n};\n\nPostHogPersistence.prototype.get_cross_subdomain = function() {\n    return this.cross_subdomain;\n};\n\nPostHogPersistence.prototype.set_secure = function(secure) {\n    if (secure !== this.secure) {\n        this.secure = secure ? true : false;\n        this.remove();\n        this.save();\n    }\n};\n\nPostHogPersistence.prototype._add_to_people_queue = function(queue, data) {\n    var q_key = this._get_queue_key(queue),\n        q_data = data[queue],\n        set_q = this._get_or_create_queue(SET_ACTION),\n        set_once_q = this._get_or_create_queue(SET_ONCE_ACTION),\n        unset_q = this._get_or_create_queue(UNSET_ACTION),\n        add_q = this._get_or_create_queue(ADD_ACTION),\n        union_q = this._get_or_create_queue(UNION_ACTION),\n        remove_q = this._get_or_create_queue(REMOVE_ACTION, []),\n        append_q = this._get_or_create_queue(APPEND_ACTION, []);\n\n    if (q_key === SET_QUEUE_KEY) {\n        // Update the set queue - we can override any existing values\n        _.extend(set_q, q_data);\n        // if there was a pending increment, override it\n        // with the set.\n        this._pop_from_people_queue(ADD_ACTION, q_data);\n        // if there was a pending union, override it\n        // with the set.\n        this._pop_from_people_queue(UNION_ACTION, q_data);\n        this._pop_from_people_queue(UNSET_ACTION, q_data);\n    } else if (q_key === SET_ONCE_QUEUE_KEY) {\n        // only queue the data if there is not already a set_once call for it.\n        _.each(q_data, function(v, k) {\n            if (!(k in set_once_q)) {\n                set_once_q[k] = v;\n            }\n        });\n        this._pop_from_people_queue(UNSET_ACTION, q_data);\n    } else if (q_key === UNSET_QUEUE_KEY) {\n        _.each(q_data, function(prop) {\n\n            // undo previously-queued actions on this key\n            _.each([set_q, set_once_q, add_q, union_q], function(enqueued_obj) {\n                if (prop in enqueued_obj) {\n                    delete enqueued_obj[prop];\n                }\n            });\n            _.each(append_q, function(append_obj) {\n                if (prop in append_obj) {\n                    delete append_obj[prop];\n                }\n            });\n\n            unset_q[prop] = true;\n\n        });\n    } else if (q_key === ADD_QUEUE_KEY) {\n        _.each(q_data, function(v, k) {\n            // If it exists in the set queue, increment\n            // the value\n            if (k in set_q) {\n                set_q[k] += v;\n            } else {\n                // If it doesn't exist, update the add\n                // queue\n                if (!(k in add_q)) {\n                    add_q[k] = 0;\n                }\n                add_q[k] += v;\n            }\n        }, this);\n        this._pop_from_people_queue(UNSET_ACTION, q_data);\n    } else if (q_key === UNION_QUEUE_KEY) {\n        _.each(q_data, function(v, k) {\n            if (_.isArray(v)) {\n                if (!(k in union_q)) {\n                    union_q[k] = [];\n                }\n                // We may send duplicates, the server will dedup them.\n                union_q[k] = union_q[k].concat(v);\n            }\n        });\n        this._pop_from_people_queue(UNSET_ACTION, q_data);\n    } else if (q_key === REMOVE_QUEUE_KEY) {\n        remove_q.push(q_data);\n        this._pop_from_people_queue(APPEND_ACTION, q_data);\n    } else if (q_key === APPEND_QUEUE_KEY) {\n        append_q.push(q_data);\n        this._pop_from_people_queue(UNSET_ACTION, q_data);\n    }\n\n    console.log('POSTHOG PEOPLE REQUEST (QUEUED, PENDING IDENTIFY):');\n    console.log(data);\n\n    this.save();\n};\n\nPostHogPersistence.prototype._pop_from_people_queue = function(queue, data) {\n    var q = this._get_queue(queue);\n    if (!_.isUndefined(q)) {\n        _.each(data, function(v, k) {\n            if (queue === APPEND_ACTION || queue === REMOVE_ACTION) {\n                // list actions: only remove if both k+v match\n                // e.g. remove should not override append in a case like\n                // append({foo: 'bar'}); remove({foo: 'qux'})\n                _.each(q, function(queued_action) {\n                    if (queued_action[k] === v) {\n                        delete queued_action[k];\n                    }\n                });\n            } else {\n                delete q[k];\n            }\n        }, this);\n\n        this.save();\n    }\n};\n\nPostHogPersistence.prototype._get_queue_key = function(queue) {\n    if (queue === SET_ACTION) {\n        return SET_QUEUE_KEY;\n    } else if (queue === SET_ONCE_ACTION) {\n        return SET_ONCE_QUEUE_KEY;\n    } else if (queue === UNSET_ACTION) {\n        return UNSET_QUEUE_KEY;\n    } else if (queue === ADD_ACTION) {\n        return ADD_QUEUE_KEY;\n    } else if (queue === APPEND_ACTION) {\n        return APPEND_QUEUE_KEY;\n    } else if (queue === REMOVE_ACTION) {\n        return REMOVE_QUEUE_KEY;\n    } else if (queue === UNION_ACTION) {\n        return UNION_QUEUE_KEY;\n    } else {\n        console.error('Invalid queue:', queue);\n    }\n};\n\nPostHogPersistence.prototype._get_queue = function(queue) {\n    return this['props'][this._get_queue_key(queue)];\n};\nPostHogPersistence.prototype._get_or_create_queue = function(queue, default_val) {\n    var key = this._get_queue_key(queue);\n    default_val = _.isUndefined(default_val) ? {} : default_val;\n\n    return this['props'][key] || (this['props'][key] = default_val);\n};\n\nPostHogPersistence.prototype.set_event_timer = function(event_name, timestamp) {\n    var timers = this['props'][EVENT_TIMERS_KEY] || {};\n    timers[event_name] = timestamp;\n    this['props'][EVENT_TIMERS_KEY] = timers;\n    this.save();\n};\n\nPostHogPersistence.prototype.remove_event_timer = function(event_name) {\n    var timers = this['props'][EVENT_TIMERS_KEY] || {};\n    var timestamp = timers[event_name];\n    if (!_.isUndefined(timestamp)) {\n        delete this['props'][EVENT_TIMERS_KEY][event_name];\n        this.save();\n    }\n    return timestamp;\n};\n\nexport {\n    PostHogPersistence,\n    SET_QUEUE_KEY,\n    SET_ONCE_QUEUE_KEY,\n    UNSET_QUEUE_KEY,\n    ADD_QUEUE_KEY,\n    APPEND_QUEUE_KEY,\n    REMOVE_QUEUE_KEY,\n    UNION_QUEUE_KEY,\n    PEOPLE_DISTINCT_ID_KEY,\n    ALIAS_ID_KEY,\n    CAMPAIGN_IDS_KEY,\n    EVENT_TIMERS_KEY\n};\n","/* eslint camelcase: \"off\" */\nimport Config from './config';\nimport { _, console, userAgent, window, document, navigator } from './utils';\nimport { autocapture } from './autocapture';\nimport { FormCapture, LinkCapture } from './dom-capture';\nimport { PostHogGroup } from './posthog-group';\nimport { PostHogPeople } from './posthog-people';\nimport {\n    PostHogPersistence,\n    PEOPLE_DISTINCT_ID_KEY,\n    ALIAS_ID_KEY\n} from './posthog-persistence';\nimport {\n    optIn,\n    optOut,\n    hasOptedIn,\n    hasOptedOut,\n    clearOptInOut,\n    addOptOutCheckPostHogLib\n} from './gdpr-utils';\n\n// ==ClosureCompiler==\n// @compilation_level ADVANCED_OPTIMIZATIONS\n// @output_file_name posthog-2.8.min.js\n// ==/ClosureCompiler==\n\n/*\nSIMPLE STYLE GUIDE:\n\nthis.x === public function\nthis._x === internal - only use within this file\nthis.__x === private - only use within the class\n\nGlobals should be all caps\n*/\n\nvar init_type;       // MODULE or SNIPPET loader\nvar posthog_master; // main posthog instance / object\nvar INIT_MODULE  = 0;\nvar INIT_SNIPPET = 1;\n\n/** @const */ var PRIMARY_INSTANCE_NAME = 'posthog';\n\n\n/*\n * Dynamic... constants? Is that an oxymoron?\n */\n// http://hacks.mozilla.org/2009/07/cross-site-xmlhttprequest-with-cors/\n// https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest#withCredentials\nvar USE_XHR = (window.XMLHttpRequest && 'withCredentials' in new XMLHttpRequest());\n\n// IE<10 does not support cross-origin XHR's but script tags\n// with defer won't block window.onload; ENQUEUE_REQUESTS\n// should only be true for Opera<12\nvar ENQUEUE_REQUESTS = !USE_XHR && (userAgent.indexOf('MSIE') === -1) && (userAgent.indexOf('Mozilla') === -1);\n\n// save reference to navigator.sendBeacon so it can be minified\nvar sendBeacon = navigator['sendBeacon'];\nif (sendBeacon) {\n    sendBeacon = _.bind(sendBeacon, navigator);\n}\n\n/*\n * Module-level globals\n */\nvar DEFAULT_CONFIG = {\n    'api_host':                          'https://t.posthog.com',\n    'api_method':                        'POST',\n    'api_transport':                     'XHR',\n    'app_host':                          'https://app.posthog.com',\n    'autocapture':                         true,\n    'cdn':                               'https://cdn.posthog.com',\n    'cross_subdomain_cookie':            true,\n    'persistence':                       'cookie',\n    'persistence_name':                  '',\n    'cookie_name':                       '',\n    'loaded':                            function() {},\n    'store_google':                      true,\n    'save_referrer':                     true,\n    'test':                              false,\n    'verbose':                           false,\n    'img':                               false,\n    'capture_pageview':                    true,\n    'debug':                             false,\n    'capture_links_timeout':               300,\n    'cookie_expiration':                 365,\n    'upgrade':                           false,\n    'disable_persistence':               false,\n    'disable_cookie':                    false,\n    'secure_cookie':                     false,\n    'ip':                                true,\n    'opt_out_captureing_by_default':       false,\n    'opt_out_persistence_by_default':    false,\n    'opt_out_captureing_persistence_type': 'localStorage',\n    'opt_out_captureing_cookie_prefix':    null,\n    'property_blacklist':                [],\n    'xhr_headers':                       {}, // { header: value, header2: value }\n    'inapp_protocol':                    '//',\n    'inapp_link_new_window':             false\n};\n\nvar DOM_LOADED = false;\n\n/**\n * PostHog Library Object\n * @constructor\n */\nvar PostHogLib = function() {};\n\n\n/**\n * create_mplib(token:string, config:object, name:string)\n *\n * This function is used by the init method of PostHogLib objects\n * as well as the main initializer at the end of the JSLib (that\n * initializes document.posthog as well as any additional instances\n * declared before this file has loaded).\n */\nvar create_mplib = function(token, config, name) {\n    var instance,\n        target = (name === PRIMARY_INSTANCE_NAME) ? posthog_master : posthog_master[name];\n\n    if (target && init_type === INIT_MODULE) {\n        instance = target;\n    } else {\n        if (target && !_.isArray(target)) {\n            console.error('You have already initialized ' + name);\n            return;\n        }\n        instance = new PostHogLib();\n    }\n\n    instance._cached_groups = {}; // cache groups in a pool\n    instance._user_decide_check_complete = false;\n    instance._events_captureed_before_user_decide_check_complete = [];\n\n    instance._init(token, config, name);\n\n    instance['people'] = new PostHogPeople();\n    instance['people']._init(instance);\n\n    // if any instance on the page has debug = true, we set the\n    // global debug to be true\n    Config.DEBUG = Config.DEBUG || instance.get_config('debug');\n\n    instance['__autocapture_enabled'] = instance.get_config('autocapture');\n    if (instance.get_config('autocapture')) {\n        var num_buckets = 100;\n        var num_enabled_buckets = 100;\n        if (!autocapture.enabledForProject(instance.get_config('token'), num_buckets, num_enabled_buckets)) {\n            instance['__autocapture_enabled'] = false;\n            console.log('Not in active bucket: disabling Automatic Event Collection.');\n        } else if (!autocapture.isBrowserSupported()) {\n            instance['__autocapture_enabled'] = false;\n            console.log('Disabling Automatic Event Collection because this browser is not supported');\n        } else {\n            autocapture.init(instance);\n        }\n    }\n\n    // if target is not defined, we called init after the lib already\n    // loaded, so there won't be an array of things to execute\n    if (!_.isUndefined(target) && _.isArray(target)) {\n        // Crunch through the people queue first - we queue this data up &\n        // flush on identify, so it's better to do all these operations first\n        instance._execute_array.call(instance['people'], target['people']);\n        instance._execute_array(target);\n    }\n\n    return instance;\n};\n\n// Initialization methods\n\n/**\n * This function initializes a new instance of the PostHog captureing object.\n * All new instances are added to the main posthog object as sub properties (such as\n * posthog.library_name) and also returned by this function. To define a\n * second instance on the page, you would call:\n *\n *     posthog.init('new token', { your: 'config' }, 'library_name');\n *\n * and use it like so:\n *\n *     posthog.library_name.capture(...);\n *\n * @param {String} token   Your PostHog API token\n * @param {Object} [config]  A dictionary of config options to override. <a href=\"https://github.com/posthog/posthog-js/blob/8b2e1f7b/src/posthog-core.js#L87-L110\">See a list of default config options</a>.\n * @param {String} [name]    The name for the new posthog instance that you want created\n */\nPostHogLib.prototype.init = function (token, config, name) {\n    if (_.isUndefined(name)) {\n        console.error('You must name your new library: init(token, config, name)');\n        return;\n    }\n    if (name === PRIMARY_INSTANCE_NAME) {\n        console.error('You must initialize the main posthog object right after you include the PostHog js snippet');\n        return;\n    }\n\n    var instance = create_mplib(token, config, name);\n    posthog_master[name] = instance;\n    instance._loaded();\n\n    return instance;\n};\n\n// posthog._init(token:string, config:object, name:string)\n//\n// This function sets up the current instance of the posthog\n// library.  The difference between this method and the init(...)\n// method is this one initializes the actual instance, whereas the\n// init(...) method sets up a new library and calls _init on it.\n//\nPostHogLib.prototype._init = function(token, config, name) {\n    this['__loaded'] = true;\n    this['config'] = {};\n    this['_triggered_notifs'] = [];\n\n    this.set_config(_.extend({}, DEFAULT_CONFIG, config, {\n        'name': name,\n        'token': token,\n        'callback_fn': ((name === PRIMARY_INSTANCE_NAME) ? name : PRIMARY_INSTANCE_NAME + '.' + name) + '._jsc'\n    }));\n\n    this['_jsc'] = function() {};\n\n    this.__dom_loaded_queue = [];\n    this.__request_queue = [];\n    this.__disabled_events = [];\n    this._flags = {\n        'disable_all_events': false,\n        'identify_called': false\n    };\n\n    this['persistence'] = this['cookie'] = new PostHogPersistence(this['config']);\n    this._gdpr_init();\n\n    var uuid = _.UUID();\n    if (!this.get_distinct_id()) {\n        // There is no need to set the distinct id\n        // or the device id if something was already stored\n        // in the persitence\n        this.register_once({\n            'distinct_id': uuid,\n            '$device_id': uuid\n        }, '');\n    }\n};\n\n// Private methods\n\nPostHogLib.prototype._loaded = function() {\n    this.get_config('loaded')(this);\n\n    // this happens after so a user can call identify/name_tag in\n    // the loaded callback\n    if (this.get_config('capture_pageview')) {\n        this.capture_pageview();\n    }\n};\n\nPostHogLib.prototype._dom_loaded = function() {\n    _.each(this.__dom_loaded_queue, function(item) {\n        this._capture_dom.apply(this, item);\n    }, this);\n\n    if (!this.has_opted_out_captureing()) {\n        _.each(this.__request_queue, function(item) {\n            this._send_request.apply(this, item);\n        }, this);\n    }\n\n    delete this.__dom_loaded_queue;\n    delete this.__request_queue;\n};\n\nPostHogLib.prototype._capture_dom = function(DomClass, args) {\n    if (this.get_config('img')) {\n        console.error('You can\\'t use DOM captureing functions with img = true.');\n        return false;\n    }\n\n    if (!DOM_LOADED) {\n        this.__dom_loaded_queue.push([DomClass, args]);\n        return false;\n    }\n\n    var dt = new DomClass().init(this);\n    return dt.capture.apply(dt, args);\n};\n\n/**\n * _prepare_callback() should be called by callers of _send_request for use\n * as the callback argument.\n *\n * If there is no callback, this returns null.\n * If we are going to make XHR/XDR requests, this returns a function.\n * If we are going to use script tags, this returns a string to use as the\n * callback GET param.\n */\nPostHogLib.prototype._prepare_callback = function(callback, data) {\n    if (_.isUndefined(callback)) {\n        return null;\n    }\n\n    if (USE_XHR) {\n        var callback_function = function(response) {\n            callback(response, data);\n        };\n        return callback_function;\n    } else {\n        // if the user gives us a callback, we store as a random\n        // property on this instances jsc function and update our\n        // callback string to reflect that.\n        var jsc = this['_jsc'];\n        var randomized_cb = '' + Math.floor(Math.random() * 100000000);\n        var callback_string = this.get_config('callback_fn') + '[' + randomized_cb + ']';\n        jsc[randomized_cb] = function(response) {\n            delete jsc[randomized_cb];\n            callback(response, data);\n        };\n        return callback_string;\n    }\n};\n\nPostHogLib.prototype._send_request = function(url, data, options, callback) {\n    if (ENQUEUE_REQUESTS) {\n        this.__request_queue.push(arguments);\n        return;\n    }\n\n    var DEFAULT_OPTIONS = {\n        method: this.get_config('api_method'),\n        transport: this.get_config('api_transport')\n    };\n    var body_data = null;\n\n    if (!callback && (_.isFunction(options) || typeof options === 'string')) {\n        callback = options;\n        options = null;\n    }\n    options = _.extend(DEFAULT_OPTIONS, options || {});\n    if (!USE_XHR) {\n        options.method = 'GET';\n    }\n    var use_sendBeacon = sendBeacon && options.transport.toLowerCase() === 'sendbeacon';\n    var use_post = use_sendBeacon || options.method === 'POST';\n\n    // needed to correctly format responses\n    var verbose_mode = this.get_config('verbose');\n    if (data['verbose']) { verbose_mode = true; }\n\n    if (this.get_config('test')) { data['test'] = 1; }\n    if (verbose_mode) { data['verbose'] = 1; }\n    if (this.get_config('img')) { data['img'] = 1; }\n    if (!USE_XHR) {\n        if (callback) {\n            data['callback'] = callback;\n        } else if (verbose_mode || this.get_config('test')) {\n            // Verbose output (from verbose mode, or an error in test mode) is a json blob,\n            // which by itself is not valid javascript. Without a callback, this verbose output will\n            // cause an error when returned via jsonp, so we force a no-op callback param.\n            // See the ECMA script spec: http://www.ecma-international.org/ecma-262/5.1/#sec-12.4\n            data['callback'] = '(function(){})';\n        }\n    }\n\n    data['ip'] = this.get_config('ip')?1:0;\n    data['_'] = new Date().getTime().toString();\n\n    if (use_post) {\n        body_data = 'data=' + data['data'];\n        delete data['data'];\n    }\n\n    url += '?' + _.HTTPBuildQuery(data);\n\n    if ('img' in data) {\n        var img = document.createElement('img');\n        img.src = url;\n        document.body.appendChild(img);\n    } else if (use_sendBeacon) {\n        try {\n            sendBeacon(url, body_data);\n        } catch (e) {\n            console.error(e);\n        }\n    } else if (USE_XHR) {\n        try {\n            var req = new XMLHttpRequest();\n            req.open(options.method, url, true);\n\n            var headers = this.get_config('xhr_headers');\n            if (use_post) {\n                headers['Content-Type'] = 'application/x-www-form-urlencoded';\n            }\n            _.each(headers, function(headerValue, headerName) {\n                req.setRequestHeader(headerName, headerValue);\n            });\n\n            // send the ph_optout cookie\n            // withCredentials cannot be modified until after calling .open on Android and Mobile Safari\n            req.withCredentials = true;\n            req.onreadystatechange = function () {\n                if (req.readyState === 4) { // XMLHttpRequest.DONE == 4, except in safari 4\n                    if (req.status === 200) {\n                        if (callback) {\n                            if (verbose_mode) {\n                                var response;\n                                try {\n                                    response = _.JSONDecode(req.responseText);\n                                } catch (e) {\n                                    console.error(e);\n                                    return;\n                                }\n                                callback(response);\n                            } else {\n                                callback(Number(req.responseText));\n                            }\n                        }\n                    } else {\n                        var error = 'Bad HTTP status: ' + req.status + ' ' + req.statusText;\n                        console.error(error);\n                        if (callback) {\n                            if (verbose_mode) {\n                                callback({status: 0, error: error});\n                            } else {\n                                callback(0);\n                            }\n                        }\n                    }\n                }\n            };\n            req.send(body_data);\n        } catch (e) {\n            console.error(e);\n        }\n    } else {\n        var script = document.createElement('script');\n        script.type = 'text/javascript';\n        script.async = true;\n        script.defer = true;\n        script.src = url;\n        var s = document.getElementsByTagName('script')[0];\n        s.parentNode.insertBefore(script, s);\n    }\n};\n\n/**\n * _execute_array() deals with processing any posthog function\n * calls that were called before the PostHog library were loaded\n * (and are thus stored in an array so they can be called later)\n *\n * Note: we fire off all the posthog function calls && user defined\n * functions BEFORE we fire off posthog captureing calls. This is so\n * identify/register/set_config calls can properly modify early\n * captureing calls.\n *\n * @param {Array} array\n */\nPostHogLib.prototype._execute_array = function(array) {\n    var fn_name, alias_calls = [], other_calls = [], captureing_calls = [];\n    _.each(array, function(item) {\n        if (item) {\n            fn_name = item[0];\n            if (_.isArray(fn_name)) {\n                captureing_calls.push(item); // chained call e.g. posthog.get_group().set()\n            } else if (typeof(item) === 'function') {\n                item.call(this);\n            } else if (_.isArray(item) && fn_name === 'alias') {\n                alias_calls.push(item);\n            } else if (_.isArray(item) && fn_name.indexOf('capture') !== -1 && typeof(this[fn_name]) === 'function') {\n                captureing_calls.push(item);\n            } else {\n                other_calls.push(item);\n            }\n        }\n    }, this);\n\n    var execute = function(calls, context) {\n        _.each(calls, function(item) {\n            if (_.isArray(item[0])) {\n                // chained call\n                var caller = context;\n                _.each(item, function(call) {\n                    caller = caller[call[0]].apply(caller, call.slice(1));\n                });\n            } else {\n                this[item[0]].apply(this, item.slice(1));\n            }\n        }, context);\n    };\n\n    execute(alias_calls, this);\n    execute(other_calls, this);\n    execute(captureing_calls, this);\n};\n\n/**\n * push() keeps the standard async-array-push\n * behavior around after the lib is loaded.\n * This is only useful for external integrations that\n * do not wish to rely on our convenience methods\n * (created in the snippet).\n *\n * ### Usage:\n *     posthog.push(['register', { a: 'b' }]);\n *\n * @param {Array} item A [function_name, args...] array to be executed\n */\nPostHogLib.prototype.push = function(item) {\n    this._execute_array([item]);\n};\n\n/**\n * Disable events on the PostHog object. If passed no arguments,\n * this function disables captureing of any event. If passed an\n * array of event names, those events will be disabled, but other\n * events will continue to be captureed.\n *\n * Note: this function does not stop other posthog functions from\n * firing, such as register() or people.set().\n *\n * @param {Array} [events] An array of event names to disable\n */\nPostHogLib.prototype.disable = function(events) {\n    if (typeof(events) === 'undefined') {\n        this._flags.disable_all_events = true;\n    } else {\n        this.__disabled_events = this.__disabled_events.concat(events);\n    }\n};\n\n/**\n * Capture an event. This is the most important and\n * frequently used PostHog function.\n *\n * ### Usage:\n *\n *     // capture an event named 'Registered'\n *     posthog.capture('Registered', {'Gender': 'Male', 'Age': 21});\n *\n *     // capture an event using navigator.sendBeacon\n *     posthog.capture('Left page', {'duration_seconds': 35}, {transport: 'sendBeacon'});\n *\n * To capture link clicks or form submissions, see capture_links() or capture_forms().\n *\n * @param {String} event_name The name of the event. This can be anything the user does - 'Button Click', 'Sign Up', 'Item Purchased', etc.\n * @param {Object} [properties] A set of properties to include with the event you're sending. These describe the user who did the event or details about the event itself.\n * @param {Object} [options] Optional configuration for this capture request.\n * @param {String} [options.transport] Transport method for network request ('xhr' or 'sendBeacon').\n * @param {Function} [callback] If provided, the callback function will be called after captureing the event.\n */\nPostHogLib.prototype.capture = addOptOutCheckPostHogLib(function(event_name, properties, options, callback) {\n    if (!callback && typeof options === 'function') {\n        callback = options;\n        options = null;\n    }\n    options = options || {};\n    var transport = options['transport']; // external API, don't minify 'transport' prop\n    if (transport) {\n        options.transport = transport; // 'transport' prop name can be minified internally\n    }\n    if (typeof callback !== 'function') {\n        callback = function() {};\n    }\n\n    if (_.isUndefined(event_name)) {\n        console.error('No event name provided to posthog.capture');\n        return;\n    }\n\n    if (this._event_is_disabled(event_name)) {\n        callback(0);\n        return;\n    }\n\n    // set defaults\n    properties = properties || {};\n    properties['token'] = this.get_config('token');\n\n    // set $duration if time_event was previously called for this event\n    var start_timestamp = this['persistence'].remove_event_timer(event_name);\n    if (!_.isUndefined(start_timestamp)) {\n        var duration_in_ms = new Date().getTime() - start_timestamp;\n        properties['$duration'] = parseFloat((duration_in_ms / 1000).toFixed(3));\n    }\n\n    // update persistence\n    this['persistence'].update_search_keyword(document.referrer);\n\n    if (this.get_config('store_google')) { this['persistence'].update_campaign_params(); }\n    if (this.get_config('save_referrer')) { this['persistence'].update_referrer_info(document.referrer); }\n\n    // note: extend writes to the first object, so lets make sure we\n    // don't write to the persistence properties object and info\n    // properties object by passing in a new object\n\n    // update properties with pageview info and super-properties\n    properties = _.extend(\n        {},\n        _.info.properties(),\n        this['persistence'].properties(),\n        properties\n    );\n\n    var property_blacklist = this.get_config('property_blacklist');\n    if (_.isArray(property_blacklist)) {\n        _.each(property_blacklist, function(blacklisted_prop) {\n            delete properties[blacklisted_prop];\n        });\n    } else {\n        console.error('Invalid value for property_blacklist config: ' + property_blacklist);\n    }\n\n    var data = {\n        'event': event_name,\n        'properties': properties\n    };\n    var truncated_data = _.truncate(data, 255);\n    var json_data      = _.JSONEncode(truncated_data);\n    var encoded_data   = _.base64Encode(json_data);\n\n    console.log('POSTHOG REQUEST:');\n    console.log(truncated_data);\n\n    this._send_request(\n        this.get_config('api_host') + '/e/',\n        { 'data': encoded_data },\n        options,\n        this._prepare_callback(callback, truncated_data)\n    );\n\n    return truncated_data;\n});\n\n/**\n * Register the current user into one/many groups.\n *\n * ### Usage:\n *\n *      posthog.set_group('company', ['posthog', 'google']) // an array of IDs\n *      posthog.set_group('company', 'posthog')\n *      posthog.set_group('company', 128746312)\n *\n * @param {String} group_key Group key\n * @param {Array|String|Number} group_ids An array of group IDs, or a singular group ID\n * @param {Function} [callback] If provided, the callback will be called after captureing the event.\n *\n */\nPostHogLib.prototype.set_group = addOptOutCheckPostHogLib(function(group_key, group_ids, callback) {\n    if (!_.isArray(group_ids)) {\n        group_ids = [group_ids];\n    }\n    var prop = {};\n    prop[group_key] = group_ids;\n    this.register(prop);\n    return this['people'].set(group_key, group_ids, callback);\n});\n\n/**\n * Add a new group for this user.\n *\n * ### Usage:\n *\n *      posthog.add_group('company', 'posthog')\n *\n * @param {String} group_key Group key\n * @param {*} group_id A valid PostHog property type\n * @param {Function} [callback] If provided, the callback will be called after captureing the event.\n */\nPostHogLib.prototype.add_group = addOptOutCheckPostHogLib(function(group_key, group_id, callback) {\n    var old_values = this.get_property(group_key);\n    if (old_values === undefined) {\n        var prop = {};\n        prop[group_key] = [group_id];\n        this.register(prop);\n    } else {\n        if (old_values.indexOf(group_id) === -1) {\n            old_values.push(group_id);\n            this.register(prop);\n        }\n    }\n    return this['people'].union(group_key, group_id, callback);\n});\n\n/**\n * Remove a group from this user.\n *\n * ### Usage:\n *\n *      posthog.remove_group('company', 'posthog')\n *\n * @param {String} group_key Group key\n * @param {*} group_id A valid PostHog property type\n * @param {Function} [callback] If provided, the callback will be called after captureing the event.\n */\nPostHogLib.prototype.remove_group = addOptOutCheckPostHogLib(function(group_key, group_id, callback) {\n    var old_value = this.get_property(group_key);\n    // if the value doesn't exist, the persistent store is unchanged\n    if (old_value !== undefined) {\n        var idx = old_value.indexOf(group_id);\n        if (idx > -1) {\n            old_value.splice(idx, 1);\n            this.register({group_key: old_value});\n        }\n        if (old_value.length === 0) {\n            this.unregister(group_key);\n        }\n    }\n    return this['people'].remove(group_key, group_id, callback);\n});\n\n/**\n * Capture an event with specific groups.\n *\n * ### Usage:\n *\n *      posthog.capture_with_groups('purchase', {'product': 'iphone'}, {'University': ['UCB', 'UCLA']})\n *\n * @param {String} event_name The name of the event (see `posthog.capture()`)\n * @param {Object=} properties A set of properties to include with the event you're sending (see `posthog.capture()`)\n * @param {Object=} groups An object mapping group name keys to one or more values\n * @param {Function} [callback] If provided, the callback will be called after captureing the event.\n */\nPostHogLib.prototype.capture_with_groups = addOptOutCheckPostHogLib(function(event_name, properties, groups, callback) {\n    var captureing_props = _.extend({}, properties || {});\n    _.each(groups, function(v, k) {\n        if (v !== null && v !== undefined) {\n            captureing_props[k] = v;\n        }\n    });\n    return this.capture(event_name, captureing_props, callback);\n});\n\nPostHogLib.prototype._create_map_key = function (group_key, group_id) {\n    return group_key + '_' + JSON.stringify(group_id);\n};\n\nPostHogLib.prototype._remove_group_from_cache = function (group_key, group_id) {\n    delete this._cached_groups[this._create_map_key(group_key, group_id)];\n};\n\n/**\n * Look up reference to a PostHog group\n *\n * ### Usage:\n *\n *       posthog.get_group(group_key, group_id)\n *\n * @param {String} group_key Group key\n * @param {Object} group_id A valid PostHog property type\n * @returns {Object} A PostHogGroup identifier\n */\nPostHogLib.prototype.get_group = function (group_key, group_id) {\n    var map_key = this._create_map_key(group_key, group_id);\n    var group = this._cached_groups[map_key];\n    if (group === undefined || group._group_key !== group_key || group._group_id !== group_id) {\n        group = new PostHogGroup();\n        group._init(this, group_key, group_id);\n        this._cached_groups[map_key] = group;\n    }\n    return group;\n};\n\n/**\n * Capture a page view event, which is currently ignored by the server.\n * This function is called by default on page load unless the\n * capture_pageview configuration variable is false.\n *\n * @param {String} [page] The url of the page to record. If you don't include this, it defaults to the current url.\n * @api private\n */\nPostHogLib.prototype.capture_pageview = function(page) {\n    if (_.isUndefined(page)) {\n        page = document.location.href;\n    }\n    this.capture('$pageview');\n};\n\n/**\n * Capture clicks on a set of document elements. Selector must be a\n * valid query. Elements must exist on the page at the time capture_links is called.\n *\n * ### Usage:\n *\n *     // capture click for link id #nav\n *     posthog.capture_links('#nav', 'Clicked Nav Link');\n *\n * ### Notes:\n *\n * This function will wait up to 300 ms for the PostHog\n * servers to respond. If they have not responded by that time\n * it will head to the link without ensuring that your event\n * has been captureed.  To configure this timeout please see the\n * set_config() documentation below.\n *\n * If you pass a function in as the properties argument, the\n * function will receive the DOMElement that triggered the\n * event as an argument.  You are expected to return an object\n * from the function; any properties defined on this object\n * will be sent to posthog as event properties.\n *\n * @type {Function}\n * @param {Object|String} query A valid DOM query, element or jQuery-esque list\n * @param {String} event_name The name of the event to capture\n * @param {Object|Function} [properties] A properties object or function that returns a dictionary of properties when passed a DOMElement\n */\nPostHogLib.prototype.capture_links = function() {\n    return this._capture_dom.call(this, LinkCapture, arguments);\n};\n\n/**\n * Capture form submissions. Selector must be a valid query.\n *\n * ### Usage:\n *\n *     // capture submission for form id 'register'\n *     posthog.capture_forms('#register', 'Created Account');\n *\n * ### Notes:\n *\n * This function will wait up to 300 ms for the posthog\n * servers to respond, if they have not responded by that time\n * it will head to the link without ensuring that your event\n * has been captureed.  To configure this timeout please see the\n * set_config() documentation below.\n *\n * If you pass a function in as the properties argument, the\n * function will receive the DOMElement that triggered the\n * event as an argument.  You are expected to return an object\n * from the function; any properties defined on this object\n * will be sent to posthog as event properties.\n *\n * @type {Function}\n * @param {Object|String} query A valid DOM query, element or jQuery-esque list\n * @param {String} event_name The name of the event to capture\n * @param {Object|Function} [properties] This can be a set of properties, or a function that returns a set of properties after being passed a DOMElement\n */\nPostHogLib.prototype.capture_forms = function() {\n    return this._capture_dom.call(this, FormCaptureer, arguments);\n};\n\n/**\n * Time an event by including the time between this call and a\n * later 'capture' call for the same event in the properties sent\n * with the event.\n *\n * ### Usage:\n *\n *     // time an event named 'Registered'\n *     posthog.time_event('Registered');\n *     posthog.capture('Registered', {'Gender': 'Male', 'Age': 21});\n *\n * When called for a particular event name, the next capture call for that event\n * name will include the elapsed time between the 'time_event' and 'capture'\n * calls. This value is stored as seconds in the '$duration' property.\n *\n * @param {String} event_name The name of the event.\n */\nPostHogLib.prototype.time_event = function(event_name) {\n    if (_.isUndefined(event_name)) {\n        console.error('No event name provided to posthog.time_event');\n        return;\n    }\n\n    if (this._event_is_disabled(event_name)) {\n        return;\n    }\n\n    this['persistence'].set_event_timer(event_name,  new Date().getTime());\n};\n\n/**\n * Register a set of super properties, which are included with all\n * events. This will overwrite previous super property values.\n *\n * ### Usage:\n *\n *     // register 'Gender' as a super property\n *     posthog.register({'Gender': 'Female'});\n *\n *     // register several super properties when a user signs up\n *     posthog.register({\n *         'Email': 'jdoe@example.com',\n *         'Account Type': 'Free'\n *     });\n *\n * @param {Object} properties An associative array of properties to store about the user\n * @param {Number} [days] How many days since the user's last visit to store the super properties\n */\nPostHogLib.prototype.register = function(props, days) {\n    this['persistence'].register(props, days);\n};\n\n/**\n * Register a set of super properties only once. This will not\n * overwrite previous super property values, unlike register().\n *\n * ### Usage:\n *\n *     // register a super property for the first time only\n *     posthog.register_once({\n *         'First Login Date': new Date().toISOString()\n *     });\n *\n * ### Notes:\n *\n * If default_value is specified, current super properties\n * with that value will be overwritten.\n *\n * @param {Object} properties An associative array of properties to store about the user\n * @param {*} [default_value] Value to override if already set in super properties (ex: 'False') Default: 'None'\n * @param {Number} [days] How many days since the users last visit to store the super properties\n */\nPostHogLib.prototype.register_once = function(props, default_value, days) {\n    this['persistence'].register_once(props, default_value, days);\n};\n\n/**\n * Delete a super property stored with the current user.\n *\n * @param {String} property The name of the super property to remove\n */\nPostHogLib.prototype.unregister = function(property) {\n    this['persistence'].unregister(property);\n};\n\nPostHogLib.prototype._register_single = function(prop, value) {\n    var props = {};\n    props[prop] = value;\n    this.register(props);\n};\n\n/**\n * Identify a user with a unique ID instead of a PostHog\n * randomly generated distinct_id. If the method is never called,\n * then unique visitors will be identified by a UUID generated\n * the first time they visit the site.\n *\n * ### Notes:\n *\n * You can call this function to overwrite a previously set\n * unique ID for the current user. PostHog cannot translate\n * between IDs at this time, so when you change a user's ID\n * they will appear to be a new user.\n *\n * When used alone, posthog.identify will change the user's\n * distinct_id to the unique ID provided. When used in tandem\n * with posthog.alias, it will allow you to identify based on\n * unique ID and map that back to the original, anonymous\n * distinct_id given to the user upon her first arrival to your\n * site (thus connecting anonymous pre-signup activity to\n * post-signup activity). Though the two work together, do not\n * call identify() at the same time as alias(). Calling the two\n * at the same time can cause a race condition, so it is best\n * practice to call identify on the original, anonymous ID\n * right after you've aliased it.\n * <a href=\"https://posthog.com/help/questions/articles/how-should-i-handle-my-user-identity-with-the-posthog-javascript-library\">Learn more about how posthog.identify and posthog.alias can be used</a>.\n *\n * @param {String} [unique_id] A string that uniquely identifies a user. If not provided, the distinct_id currently in the persistent store (cookie or localStorage) will be used.\n */\nPostHogLib.prototype.identify = function(\n    new_distinct_id, _set_callback, _add_callback, _append_callback, _set_once_callback, _union_callback, _unset_callback, _remove_callback\n) {\n    // Optional Parameters\n    //  _set_callback:function  A callback to be run if and when the People set queue is flushed\n    //  _add_callback:function  A callback to be run if and when the People add queue is flushed\n    //  _append_callback:function  A callback to be run if and when the People append queue is flushed\n    //  _set_once_callback:function  A callback to be run if and when the People set_once queue is flushed\n    //  _union_callback:function  A callback to be run if and when the People union queue is flushed\n    //  _unset_callback:function  A callback to be run if and when the People unset queue is flushed\n\n    var previous_distinct_id = this.get_distinct_id();\n    this.register({'$user_id': new_distinct_id});\n\n    if (!this.get_property('$device_id')) {\n        // The persisted distinct id might not actually be a device id at all\n        // it might be a distinct id of the user from before\n        var device_id = previous_distinct_id;\n        this.register_once({\n            '$had_persisted_distinct_id': true,\n            '$device_id': device_id\n        }, '');\n    }\n\n    // identify only changes the distinct id if it doesn't match either the existing or the alias;\n    // if it's new, blow away the alias as well.\n    if (new_distinct_id !== previous_distinct_id && new_distinct_id !== this.get_property(ALIAS_ID_KEY)) {\n        this.unregister(ALIAS_ID_KEY);\n        this.register({'distinct_id': new_distinct_id});\n    }\n    // this._check_and_handle_notifications(this.get_distinct_id());\n    this._flags.identify_called = true;\n    // Flush any queued up people requests\n    this['people']._flush(_set_callback, _add_callback, _append_callback, _set_once_callback, _union_callback, _unset_callback, _remove_callback);\n\n    // send an $identify event any time the distinct_id is changing - logic on the server\n    // will determine whether or not to do anything with it.\n    if (new_distinct_id !== previous_distinct_id) {\n        this.capture('$identify', { 'distinct_id': new_distinct_id, '$anon_distinct_id': previous_distinct_id });\n    }\n};\n\n/**\n * Clears super properties and generates a new random distinct_id for this instance.\n * Useful for clearing data when a user logs out.\n */\nPostHogLib.prototype.reset = function() {\n    this['persistence'].clear();\n    this._flags.identify_called = false;\n    var uuid = _.UUID();\n    this.register_once({\n        'distinct_id': uuid,\n        '$device_id': uuid\n    }, '');\n};\n\n/**\n * Returns the current distinct id of the user. This is either the id automatically\n * generated by the library or the id that has been passed by a call to identify().\n *\n * ### Notes:\n *\n * get_distinct_id() can only be called after the PostHog library has finished loading.\n * init() has a loaded function available to handle this automatically. For example:\n *\n *     // set distinct_id after the posthog library has loaded\n *     posthog.init('YOUR PROJECT TOKEN', {\n *         loaded: function(posthog) {\n *             distinct_id = posthog.get_distinct_id();\n *         }\n *     });\n */\nPostHogLib.prototype.get_distinct_id = function() {\n    return this.get_property('distinct_id');\n};\n\n/**\n * Create an alias, which PostHog will use to link two distinct_ids going forward (not retroactively).\n * Multiple aliases can map to the same original ID, but not vice-versa. Aliases can also be chained - the\n * following is a valid scenario:\n *\n *     posthog.alias('new_id', 'existing_id');\n *     ...\n *     posthog.alias('newer_id', 'new_id');\n *\n * If the original ID is not passed in, we will use the current distinct_id - probably the auto-generated GUID.\n *\n * ### Notes:\n *\n * The best practice is to call alias() when a unique ID is first created for a user\n * (e.g., when a user first registers for an account and provides an email address).\n * alias() should never be called more than once for a given user, except to\n * chain a newer ID to a previously new ID, as described above.\n *\n * @param {String} alias A unique identifier that you want to use for this user in the future.\n * @param {String} [original] The current identifier being used for this user.\n */\nPostHogLib.prototype.alias = function(alias, original) {\n    // If the $people_distinct_id key exists in persistence, there has been a previous\n    // posthog.people.identify() call made for this user. It is VERY BAD to make an alias with\n    // this ID, as it will duplicate users.\n    if (alias === this.get_property(PEOPLE_DISTINCT_ID_KEY)) {\n        console.critical('Attempting to create alias for existing People user - aborting.');\n        return -2;\n    }\n\n    var _this = this;\n    if (_.isUndefined(original)) {\n        original = this.get_distinct_id();\n    }\n    if (alias !== original) {\n        this._register_single(ALIAS_ID_KEY, alias);\n        return this.capture('$create_alias', { 'alias': alias, 'distinct_id': original }, function() {\n            // Flush the people queue\n            _this.identify(alias);\n        });\n    } else {\n        console.error('alias matches current distinct_id - skipping api call.');\n        this.identify(alias);\n        return -1;\n    }\n};\n\n/**\n * Provide a string to recognize the user by. The string passed to\n * this method will appear in the PostHog Streams product rather\n * than an automatically generated name. Name tags do not have to\n * be unique.\n *\n * This value will only be included in Streams data.\n *\n * @param {String} name_tag A human readable name for the user\n * @api private\n */\nPostHogLib.prototype.name_tag = function(name_tag) {\n    this._register_single('ph_name_tag', name_tag);\n};\n\n/**\n * Update the configuration of a posthog library instance.\n *\n * The default config is:\n *\n *     {\n *       // HTTP method for captureing requests\n *       api_method: 'POST'\n *\n *       // transport for sending requests ('XHR' or 'sendBeacon')\n *       // NB: sendBeacon should only be used for scenarios such as\n *       // page unload where a \"best-effort\" attempt to send is\n *       // acceptable; the sendBeacon API does not support callbacks\n *       // or any way to know the result of the request. PostHog\n *       // captureing via sendBeacon will not support any event-\n *       // batching or retry mechanisms.\n *       api_transport: 'XHR'\n *\n *       // super properties cookie expiration (in days)\n *       cookie_expiration: 365\n *\n *       // super properties span subdomains\n *       cross_subdomain_cookie: true\n *\n *       // debug mode\n *       debug: false\n *\n *       // if this is true, the posthog cookie or localStorage entry\n *       // will be deleted, and no user persistence will take place\n *       disable_persistence: false\n *\n *       // if this is true, PostHog will automatically determine\n *       // City, Region and Country data using the IP address of\n *       //the client\n *       ip: true\n *\n *       // opt users out of captureing by this PostHog instance by default\n *       opt_out_captureing_by_default: false\n *\n *       // opt users out of browser data storage by this PostHog instance by default\n *       opt_out_persistence_by_default: false\n *\n *       // persistence mechanism used by opt-in/opt-out methods - cookie\n *       // or localStorage - falls back to cookie if localStorage is unavailable\n *       opt_out_captureing_persistence_type: 'localStorage'\n *\n *       // customize the name of cookie/localStorage set by opt-in/opt-out methods\n *       opt_out_captureing_cookie_prefix: null\n *\n *       // type of persistent store for super properties (cookie/\n *       // localStorage) if set to 'localStorage', any existing\n *       // posthog cookie value with the same persistence_name\n *       // will be transferred to localStorage and deleted\n *       persistence: 'cookie'\n *\n *       // name for super properties persistent store\n *       persistence_name: ''\n *\n *       // names of properties/superproperties which should never\n *       // be sent with capture() calls\n *       property_blacklist: []\n *\n *       // if this is true, posthog cookies will be marked as\n *       // secure, meaning they will only be transmitted over https\n *       secure_cookie: false\n *\n *       // the amount of time capture_links will\n *       // wait for PostHog's servers to respond\n *       capture_links_timeout: 300\n *\n *       // should we capture a page view on page load\n *       capture_pageview: true\n *\n *       // if you set upgrade to be true, the library will check for\n *       // a cookie from our old js library and import super\n *       // properties from it, then the old cookie is deleted\n *       // The upgrade config option only works in the initialization,\n *       // so make sure you set it when you create the library.\n *       upgrade: false\n *\n *       // extra HTTP request headers to set for each API request, in\n *       // the format {'Header-Name': value}\n *       xhr_headers: {}\n *\n *       // protocol for fetching in-app message resources, e.g.\n *       // 'https://' or 'http://'; defaults to '//' (which defers to the\n *       // current page's protocol)\n *       inapp_protocol: '//'\n *\n *       // whether to open in-app message link in new tab/window\n *       inapp_link_new_window: false\n *     }\n *\n *\n * @param {Object} config A dictionary of new configuration values to update\n */\nPostHogLib.prototype.set_config = function(config) {\n    if (_.isObject(config)) {\n        _.extend(this['config'], config);\n\n        if (!this.get_config('persistence_name')) {\n            this['config']['persistence_name'] = this['config']['cookie_name'];\n        }\n        if (!this.get_config('disable_persistence')) {\n            this['config']['disable_persistence'] = this['config']['disable_cookie'];\n        }\n\n        if (this['persistence']) {\n            this['persistence'].update_config(this['config']);\n        }\n        Config.DEBUG = Config.DEBUG || this.get_config('debug');\n    }\n};\n\n/**\n * returns the current config object for the library.\n */\nPostHogLib.prototype.get_config = function(prop_name) {\n    return this['config'][prop_name];\n};\n\n/**\n * Returns the value of the super property named property_name. If no such\n * property is set, get_property() will return the undefined value.\n *\n * ### Notes:\n *\n * get_property() can only be called after the PostHog library has finished loading.\n * init() has a loaded function available to handle this automatically. For example:\n *\n *     // grab value for 'user_id' after the posthog library has loaded\n *     posthog.init('YOUR PROJECT TOKEN', {\n *         loaded: function(posthog) {\n *             user_id = posthog.get_property('user_id');\n *         }\n *     });\n *\n * @param {String} property_name The name of the super property you want to retrieve\n */\nPostHogLib.prototype.get_property = function(property_name) {\n    return this['persistence']['props'][property_name];\n};\n\nPostHogLib.prototype.toString = function() {\n    var name = this.get_config('name');\n    if (name !== PRIMARY_INSTANCE_NAME) {\n        name = PRIMARY_INSTANCE_NAME + '.' + name;\n    }\n    return name;\n};\n\nPostHogLib.prototype._event_is_disabled = function(event_name) {\n    return _.isBlockedUA(userAgent) ||\n        this._flags.disable_all_events ||\n        _.include(this.__disabled_events, event_name);\n};\n\nPostHogLib.prototype._handle_user_decide_check_complete = function() {\n    this._user_decide_check_complete = true;\n};\n\n// perform some housekeeping around GDPR opt-in/out state\nPostHogLib.prototype._gdpr_init = function() {\n    var is_localStorage_requested = this.get_config('opt_out_captureing_persistence_type') === 'localStorage';\n\n    // try to convert opt-in/out cookies to localStorage if possible\n    if (is_localStorage_requested && _.localStorage.is_supported()) {\n        if (!this.has_opted_in_captureing() && this.has_opted_in_captureing({'persistence_type': 'cookie'})) {\n            this.opt_in_captureing({'enable_persistence': false});\n        }\n        if (!this.has_opted_out_captureing() && this.has_opted_out_captureing({'persistence_type': 'cookie'})) {\n            this.opt_out_captureing({'clear_persistence': false});\n        }\n        this.clear_opt_in_out_captureing({\n            'persistence_type': 'cookie',\n            'enable_persistence': false\n        });\n    }\n\n    // check whether the user has already opted out - if so, clear & disable persistence\n    if (this.has_opted_out_captureing()) {\n        this._gdpr_update_persistence({'clear_persistence': true});\n\n    // check whether we should opt out by default\n    // note: we don't clear persistence here by default since opt-out default state is often\n    //       used as an initial state while GDPR information is being collected\n    } else if (!this.has_opted_in_captureing() && (\n        this.get_config('opt_out_captureing_by_default') || _.cookie.get('ph_optout')\n    )) {\n        _.cookie.remove('ph_optout');\n        this.opt_out_captureing({\n            'clear_persistence': this.get_config('opt_out_persistence_by_default')\n        });\n    }\n};\n\n/**\n * Enable or disable persistence based on options\n * only enable/disable if persistence is not already in this state\n * @param {boolean} [options.clear_persistence] If true, will delete all data stored by the sdk in persistence and disable it\n * @param {boolean} [options.enable_persistence] If true, will re-enable sdk persistence\n */\nPostHogLib.prototype._gdpr_update_persistence = function(options) {\n    var disabled;\n    if (options && options['clear_persistence']) {\n        disabled = true;\n    } else if (options && options['enable_persistence']) {\n        disabled = false;\n    } else {\n        return;\n    }\n\n    if (!this.get_config('disable_persistence') && this['persistence'].disabled !== disabled) {\n        this['persistence'].set_disabled(disabled);\n    }\n};\n\n// call a base gdpr function after constructing the appropriate token and options args\nPostHogLib.prototype._gdpr_call_func = function(func, options) {\n    options = _.extend({\n        'capture': _.bind(this.capture, this),\n        'persistence_type': this.get_config('opt_out_captureing_persistence_type'),\n        'cookie_prefix': this.get_config('opt_out_captureing_cookie_prefix'),\n        'cookie_expiration': this.get_config('cookie_expiration'),\n        'cross_subdomain_cookie': this.get_config('cross_subdomain_cookie'),\n        'secure_cookie': this.get_config('secure_cookie')\n    }, options);\n\n    // check if localStorage can be used for recording opt out status, fall back to cookie if not\n    if (!_.localStorage.is_supported()) {\n        options['persistence_type'] = 'cookie';\n    }\n\n    return func(this.get_config('token'), {\n        capture: options['capture'],\n        captureEventName: options['capture_event_name'],\n        captureProperties: options['capture_properties'],\n        persistenceType: options['persistence_type'],\n        persistencePrefix: options['cookie_prefix'],\n        cookieExpiration: options['cookie_expiration'],\n        crossSubdomainCookie: options['cross_subdomain_cookie'],\n        secureCookie: options['secure_cookie']\n    });\n};\n\n/**\n * Opt the user in to data captureing and cookies/localstorage for this PostHog instance\n *\n * ### Usage\n *\n *     // opt user in\n *     posthog.opt_in_captureing();\n *\n *     // opt user in with specific event name, properties, cookie configuration\n *     posthog.opt_in_captureing({\n *         capture_event_name: 'User opted in',\n *         capture_event_properties: {\n *             'Email': 'jdoe@example.com'\n *         },\n *         cookie_expiration: 30,\n *         secure_cookie: true\n *     });\n *\n * @param {Object} [options] A dictionary of config options to override\n * @param {function} [options.capture] Function used for captureing a PostHog event to record the opt-in action (default is this PostHog instance's capture method)\n * @param {string} [options.capture_event_name=$opt_in] Event name to be used for captureing the opt-in action\n * @param {Object} [options.capture_properties] Set of properties to be captureed along with the opt-in action\n * @param {boolean} [options.enable_persistence=true] If true, will re-enable sdk persistence\n * @param {string} [options.persistence_type=localStorage] Persistence mechanism used - cookie or localStorage - falls back to cookie if localStorage is unavailable\n * @param {string} [options.cookie_prefix=__ph_opt_in_out] Custom prefix to be used in the cookie/localstorage name\n * @param {Number} [options.cookie_expiration] Number of days until the opt-in cookie expires (overrides value specified in this PostHog instance's config)\n * @param {boolean} [options.cross_subdomain_cookie] Whether the opt-in cookie is set as cross-subdomain or not (overrides value specified in this PostHog instance's config)\n * @param {boolean} [options.secure_cookie] Whether the opt-in cookie is set as secure or not (overrides value specified in this PostHog instance's config)\n */\nPostHogLib.prototype.opt_in_captureing = function(options) {\n    options = _.extend({\n        'enable_persistence': true\n    }, options);\n\n    this._gdpr_call_func(optIn, options);\n    this._gdpr_update_persistence(options);\n};\n\n/**\n * Opt the user out of data captureing and cookies/localstorage for this PostHog instance\n *\n * ### Usage\n *\n *     // opt user out\n *     posthog.opt_out_captureing();\n *\n *     // opt user out with different cookie configuration from PostHog instance\n *     posthog.opt_out_captureing({\n *         cookie_expiration: 30,\n *         secure_cookie: true\n *     });\n *\n * @param {Object} [options] A dictionary of config options to override\n * @param {boolean} [options.delete_user=true] If true, will delete the currently identified user's profile and clear all charges after opting the user out\n * @param {boolean} [options.clear_persistence=true] If true, will delete all data stored by the sdk in persistence\n * @param {string} [options.persistence_type=localStorage] Persistence mechanism used - cookie or localStorage - falls back to cookie if localStorage is unavailable\n * @param {string} [options.cookie_prefix=__ph_opt_in_out] Custom prefix to be used in the cookie/localstorage name\n * @param {Number} [options.cookie_expiration] Number of days until the opt-in cookie expires (overrides value specified in this PostHog instance's config)\n * @param {boolean} [options.cross_subdomain_cookie] Whether the opt-in cookie is set as cross-subdomain or not (overrides value specified in this PostHog instance's config)\n * @param {boolean} [options.secure_cookie] Whether the opt-in cookie is set as secure or not (overrides value specified in this PostHog instance's config)\n */\nPostHogLib.prototype.opt_out_captureing = function(options) {\n    options = _.extend({\n        'clear_persistence': true,\n        'delete_user': true\n    }, options);\n\n    // delete use and clear charges since these methods may be disabled by opt-out\n    if (options['delete_user'] && this['people'] && this['people']._identify_called()) {\n        this['people'].delete_user();\n        this['people'].clear_charges();\n    }\n\n    this._gdpr_call_func(optOut, options);\n    this._gdpr_update_persistence(options);\n};\n\n/**\n * Check whether the user has opted in to data captureing and cookies/localstorage for this PostHog instance\n *\n * ### Usage\n *\n *     var has_opted_in = posthog.has_opted_in_captureing();\n *     // use has_opted_in value\n *\n * @param {Object} [options] A dictionary of config options to override\n * @param {string} [options.persistence_type=localStorage] Persistence mechanism used - cookie or localStorage - falls back to cookie if localStorage is unavailable\n * @param {string} [options.cookie_prefix=__ph_opt_in_out] Custom prefix to be used in the cookie/localstorage name\n * @returns {boolean} current opt-in status\n */\nPostHogLib.prototype.has_opted_in_captureing = function(options) {\n    return this._gdpr_call_func(hasOptedIn, options);\n};\n\n/**\n * Check whether the user has opted out of data captureing and cookies/localstorage for this PostHog instance\n *\n * ### Usage\n *\n *     var has_opted_out = posthog.has_opted_out_captureing();\n *     // use has_opted_out value\n *\n * @param {Object} [options] A dictionary of config options to override\n * @param {string} [options.persistence_type=localStorage] Persistence mechanism used - cookie or localStorage - falls back to cookie if localStorage is unavailable\n * @param {string} [options.cookie_prefix=__ph_opt_in_out] Custom prefix to be used in the cookie/localstorage name\n * @returns {boolean} current opt-out status\n */\nPostHogLib.prototype.has_opted_out_captureing = function(options) {\n    return this._gdpr_call_func(hasOptedOut, options);\n};\n\n/**\n * Clear the user's opt in/out status of data captureing and cookies/localstorage for this PostHog instance\n *\n * ### Usage\n *\n *     // clear user's opt-in/out status\n *     posthog.clear_opt_in_out_captureing();\n *\n *     // clear user's opt-in/out status with specific cookie configuration - should match\n *     // configuration used when opt_in_captureing/opt_out_captureing methods were called.\n *     posthog.clear_opt_in_out_captureing({\n *         cookie_expiration: 30,\n *         secure_cookie: true\n *     });\n *\n * @param {Object} [options] A dictionary of config options to override\n * @param {boolean} [options.enable_persistence=true] If true, will re-enable sdk persistence\n * @param {string} [options.persistence_type=localStorage] Persistence mechanism used - cookie or localStorage - falls back to cookie if localStorage is unavailable\n * @param {string} [options.cookie_prefix=__ph_opt_in_out] Custom prefix to be used in the cookie/localstorage name\n * @param {Number} [options.cookie_expiration] Number of days until the opt-in cookie expires (overrides value specified in this PostHog instance's config)\n * @param {boolean} [options.cross_subdomain_cookie] Whether the opt-in cookie is set as cross-subdomain or not (overrides value specified in this PostHog instance's config)\n * @param {boolean} [options.secure_cookie] Whether the opt-in cookie is set as secure or not (overrides value specified in this PostHog instance's config)\n */\nPostHogLib.prototype.clear_opt_in_out_captureing = function(options) {\n    options = _.extend({\n        'enable_persistence': true\n    }, options);\n\n    this._gdpr_call_func(clearOptInOut, options);\n    this._gdpr_update_persistence(options);\n};\n\n// EXPORTS (for closure compiler)\n\n// PostHogLib Exports\nPostHogLib.prototype['init']                               = PostHogLib.prototype.init;\nPostHogLib.prototype['reset']                              = PostHogLib.prototype.reset;\nPostHogLib.prototype['disable']                            = PostHogLib.prototype.disable;\nPostHogLib.prototype['time_event']                         = PostHogLib.prototype.time_event;\nPostHogLib.prototype['capture']                              = PostHogLib.prototype.capture;\nPostHogLib.prototype['capture_links']                        = PostHogLib.prototype.capture_links;\nPostHogLib.prototype['capture_forms']                        = PostHogLib.prototype.capture_forms;\nPostHogLib.prototype['capture_pageview']                     = PostHogLib.prototype.capture_pageview;\nPostHogLib.prototype['register']                           = PostHogLib.prototype.register;\nPostHogLib.prototype['register_once']                      = PostHogLib.prototype.register_once;\nPostHogLib.prototype['unregister']                         = PostHogLib.prototype.unregister;\nPostHogLib.prototype['identify']                           = PostHogLib.prototype.identify;\nPostHogLib.prototype['alias']                              = PostHogLib.prototype.alias;\nPostHogLib.prototype['name_tag']                           = PostHogLib.prototype.name_tag;\nPostHogLib.prototype['set_config']                         = PostHogLib.prototype.set_config;\nPostHogLib.prototype['get_config']                         = PostHogLib.prototype.get_config;\nPostHogLib.prototype['get_property']                       = PostHogLib.prototype.get_property;\nPostHogLib.prototype['get_distinct_id']                    = PostHogLib.prototype.get_distinct_id;\nPostHogLib.prototype['toString']                           = PostHogLib.prototype.toString;\nPostHogLib.prototype['_check_and_handle_notifications']    = PostHogLib.prototype._check_and_handle_notifications;\nPostHogLib.prototype['_handle_user_decide_check_complete'] = PostHogLib.prototype._handle_user_decide_check_complete;\n// PostHogLib.prototype['_show_notification']                 = PostHogLib.prototype._show_notification;\nPostHogLib.prototype['opt_out_captureing']                   = PostHogLib.prototype.opt_out_captureing;\nPostHogLib.prototype['opt_in_captureing']                    = PostHogLib.prototype.opt_in_captureing;\nPostHogLib.prototype['has_opted_out_captureing']             = PostHogLib.prototype.has_opted_out_captureing;\nPostHogLib.prototype['has_opted_in_captureing']              = PostHogLib.prototype.has_opted_in_captureing;\nPostHogLib.prototype['clear_opt_in_out_captureing']          = PostHogLib.prototype.clear_opt_in_out_captureing;\nPostHogLib.prototype['get_group']                          = PostHogLib.prototype.get_group;\nPostHogLib.prototype['set_group']                          = PostHogLib.prototype.set_group;\nPostHogLib.prototype['add_group']                          = PostHogLib.prototype.add_group;\nPostHogLib.prototype['remove_group']                       = PostHogLib.prototype.remove_group;\nPostHogLib.prototype['capture_with_groups']                  = PostHogLib.prototype.capture_with_groups;\n\n// PostHogPersistence Exports\nPostHogPersistence.prototype['properties']            = PostHogPersistence.prototype.properties;\nPostHogPersistence.prototype['update_search_keyword'] = PostHogPersistence.prototype.update_search_keyword;\nPostHogPersistence.prototype['update_referrer_info']  = PostHogPersistence.prototype.update_referrer_info;\nPostHogPersistence.prototype['get_cross_subdomain']   = PostHogPersistence.prototype.get_cross_subdomain;\nPostHogPersistence.prototype['clear']                 = PostHogPersistence.prototype.clear;\n\n_.safewrap_class(PostHogLib, ['identify', '_check_and_handle_notifications']);\n\n\nvar instances = {};\nvar extend_mp = function() {\n    // add all the sub posthog instances\n    _.each(instances, function(instance, name) {\n        if (name !== PRIMARY_INSTANCE_NAME) { posthog_master[name] = instance; }\n    });\n\n    // add private functions as _\n    posthog_master['_'] = _;\n};\n\nvar override_ph_init_func = function() {\n    // we override the snippets init function to handle the case where a\n    // user initializes the posthog library after the script loads & runs\n    posthog_master['init'] = function(token, config, name) {\n        if (name) {\n            // initialize a sub library\n            if (!posthog_master[name]) {\n                posthog_master[name] = instances[name] = create_mplib(token, config, name);\n                posthog_master[name]._loaded();\n            }\n            return posthog_master[name];\n        } else {\n            var instance = posthog_master;\n\n            if (instances[PRIMARY_INSTANCE_NAME]) {\n                // main posthog lib already initialized\n                instance = instances[PRIMARY_INSTANCE_NAME];\n            } else if (token) {\n                // intialize the main posthog lib\n                instance = create_mplib(token, config, PRIMARY_INSTANCE_NAME);\n                instance._loaded();\n                instances[PRIMARY_INSTANCE_NAME] = instance;\n            }\n\n            posthog_master = instance;\n            if (init_type === INIT_SNIPPET) {\n                window[PRIMARY_INSTANCE_NAME] = posthog_master;\n            }\n            extend_mp();\n        }\n    };\n};\n\nvar add_dom_loaded_handler = function() {\n    // Cross browser DOM Loaded support\n    function dom_loaded_handler() {\n        // function flag since we only want to execute this once\n        if (dom_loaded_handler.done) { return; }\n        dom_loaded_handler.done = true;\n\n        DOM_LOADED = true;\n        ENQUEUE_REQUESTS = false;\n\n        _.each(instances, function(inst) {\n            inst._dom_loaded();\n        });\n    }\n\n    function do_scroll_check() {\n        try {\n            document.documentElement.doScroll('left');\n        } catch(e) {\n            setTimeout(do_scroll_check, 1);\n            return;\n        }\n\n        dom_loaded_handler();\n    }\n\n    if (document.addEventListener) {\n        if (document.readyState === 'complete') {\n            // safari 4 can fire the DOMContentLoaded event before loading all\n            // external JS (including this file). you will see some copypasta\n            // on the internet that checks for 'complete' and 'loaded', but\n            // 'loaded' is an IE thing\n            dom_loaded_handler();\n        } else {\n            document.addEventListener('DOMContentLoaded', dom_loaded_handler, false);\n        }\n    } else if (document.attachEvent) {\n        // IE\n        document.attachEvent('onreadystatechange', dom_loaded_handler);\n\n        // check to make sure we arn't in a frame\n        var toplevel = false;\n        try {\n            toplevel = window.frameElement === null;\n        } catch(e) {\n            // noop\n        }\n\n        if (document.documentElement.doScroll && toplevel) {\n            do_scroll_check();\n        }\n    }\n\n    // fallback handler, always will work\n    _.register_event(window, 'load', dom_loaded_handler, true);\n};\n\nexport function init_from_snippet() {\n    init_type = INIT_SNIPPET;\n    if(_.isUndefined(window.posthog)) window.posthog = [];\n    posthog_master = window.posthog;\n\n    if (posthog_master['__loaded'] || (posthog_master['config'] && posthog_master['persistence'])) {\n        // lib has already been loaded at least once; we don't want to override the global object this time so bomb early\n        console.error('PostHog library has already been downloaded at least once.');\n        return;\n    }\n    // Load instances of the PostHog Library\n    _.each(posthog_master['_i'], function(item) {\n        if (item && _.isArray(item)) {\n            instances[item[item.length-1]] = create_mplib.apply(this, item);\n        }\n    });\n\n    override_ph_init_func();\n    posthog_master['init']();\n\n    // Fire loaded events after updating the window's posthog object\n    _.each(instances, function(instance) {\n        instance._loaded();\n    });\n\n    add_dom_loaded_handler();\n}\n\nexport function init_as_module() {\n    init_type = INIT_MODULE;\n    posthog_master = new PostHogLib();\n\n    override_ph_init_func();\n    posthog_master['init']();\n    add_dom_loaded_handler();\n\n    return posthog_master;\n}\n","/* eslint camelcase: \"off\" */\nimport { init_from_snippet } from './posthog-core';\n\ninit_from_snippet();\n"]}